{"ast":null,"code":"import _defineProperty from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\jss\\\\nextjsonazure\\\\packages\\\\jss-nextjs-app\\\\src\\\\components\\\\fields\\\\Styleguide-FieldUsage-Image.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Image } from '@sitecore-jss/sitecore-jss-nextjs';\nimport StyleguideSpecimen from 'components/styleguide/Styleguide-Specimen';\n\n/**\r\n * Demonstrates usage of an Image content field within JSS.\r\n * Image field data is uploaded into the Sitecore Media Library.\r\n */\nvar StyleguideFieldUsageImage = function StyleguideFieldUsageImage(props) {\n  return /*#__PURE__*/_jsxDEV(StyleguideSpecimen, _objectSpread(_objectSpread({}, props), {}, {\n    e2eId: \"styleguide-fieldusage-image\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Plain image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Image, {\n      media: props.fields.sample1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Advanced image (not editable)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Image, {\n      field: props.fields.sample2,\n      editable: false,\n      imageParams: {\n        mw: 100,\n        mh: 50\n      },\n      height: \"50\",\n      width: \"94\",\n      \"data-sample\": \"other-attributes-pass-through\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Srcset responsive image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Image, {\n      field: props.fields.sample2,\n      srcSet: [{\n        mw: 300\n      }, {\n        mw: 100\n      }],\n      sizes: \"(min-width: 960px) 300px, 100px\",\n      className: \"img-fluid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = StyleguideFieldUsageImage;\nexport default StyleguideFieldUsageImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StyleguideFieldUsageImage\");","map":{"version":3,"sources":["D:/projects/jss/nextjsonazure/packages/jss-nextjs-app/src/components/fields/Styleguide-FieldUsage-Image.tsx"],"names":["Image","StyleguideSpecimen","StyleguideFieldUsageImage","props","fields","sample1","sample2","mw","mh"],"mappings":";;;;;;;;;;AAAA,SAASA,KAAT,QAAkC,mCAAlC;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;;AAWA;AACA;AACA;AACA;AACA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,KAAD;AAAA,sBAChC,QAAC,kBAAD,kCAAwBA,KAAxB;AAA+B,IAAA,KAAK,EAAC,6BAArC;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAK,CAACC,MAAN,CAAaC;AAA3B;AAAA;AAAA;AAAA;AAAA,aAFF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZF,eAaE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEF,KAAK,CAACC,MAAN,CAAaE,OADtB;AAEE,MAAA,QAAQ,EAAE,KAFZ;AAGE,MAAA,WAAW,EAAE;AAAEC,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,EAAE,EAAE;AAAf,OAHf;AAIE,MAAA,MAAM,EAAC,IAJT;AAKE,MAAA,KAAK,EAAC,IALR;AAME,qBAAY;AANd;AAAA;AAAA;AAAA;AAAA,aAbF,eA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA7BF,eA8BE,QAAC,KAAD;AACE,MAAA,KAAK,EAAEL,KAAK,CAACC,MAAN,CAAaE,OADtB;AAEE,MAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAD,EAAc;AAAEA,QAAAA,EAAE,EAAE;AAAN,OAAd,CAFV;AAGE,MAAA,KAAK,EAAC,iCAHR;AAIE,MAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,aA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,WADgC;AAAA,CAAlC;;KAAML,yB;AAwCN,eAAeA,yBAAf","sourcesContent":["import { Image, ImageField } from '@sitecore-jss/sitecore-jss-nextjs';\r\nimport StyleguideSpecimen from 'components/styleguide/Styleguide-Specimen';\r\nimport { StyleguideComponentProps, StyleguideSpecimenFields } from 'lib/component-props';\r\n\r\ntype StyleguideFieldUsageImageProps = StyleguideComponentProps &\r\n  StyleguideSpecimenFields & {\r\n    fields: {\r\n      sample1: ImageField;\r\n      sample2: ImageField;\r\n    };\r\n  };\r\n\r\n/**\r\n * Demonstrates usage of an Image content field within JSS.\r\n * Image field data is uploaded into the Sitecore Media Library.\r\n */\r\nconst StyleguideFieldUsageImage = (props: StyleguideFieldUsageImageProps): JSX.Element => (\r\n  <StyleguideSpecimen {...props} e2eId=\"styleguide-fieldusage-image\">\r\n    <p>Plain image</p>\r\n    <Image media={props.fields.sample1} />\r\n\r\n    {/*\r\n      Advanced image usage example\r\n      editable: controls whether image can be edited in Sitecore Experience Editor\r\n      imageParams: parameters that are passed to Sitecore to perform server-side resizing of the image.\r\n        Sample rescales image to max 100x50 dimensions on the server, respecting aspect ratio\r\n        IMPORTANT: imageParams must be whitelisted for resizing to occur. See /sitecore/config/*.config (search for 'allowedMediaParams')\r\n      any other attributes: pass through to img tag\r\n    */}\r\n    <p>Advanced image (not editable)</p>\r\n    <Image\r\n      field={props.fields.sample2}\r\n      editable={false}\r\n      imageParams={{ mw: 100, mh: 50 }}\r\n      height=\"50\"\r\n      width=\"94\"\r\n      data-sample=\"other-attributes-pass-through\"\r\n    />\r\n\r\n    {/*\r\n      Srcset adaptive image usage example\r\n      Adaptive srcsets are supported using Sitecore server-side resizing.\r\n      The `srcSet` can use Sitecore image resizing parameters (i.e. w, h, mw, mh).\r\n      Sample create a srcset using two sizes (server resizing), 300 and 100px max widths, respecting aspect ratio.\r\n      IMPORTANT: srcSet params must be whitelisted for adaptive resizing to occur. See /sitecore/config/*.config (search for 'allowedMediaParams')\r\n    */}\r\n    <p>Srcset responsive image</p>\r\n    <Image\r\n      field={props.fields.sample2}\r\n      srcSet={[{ mw: 300 }, { mw: 100 }]}\r\n      sizes=\"(min-width: 960px) 300px, 100px\"\r\n      className=\"img-fluid\"\r\n    />\r\n  </StyleguideSpecimen>\r\n);\r\n\r\nexport default StyleguideFieldUsageImage;\r\n"]},"metadata":{},"sourceType":"module"}