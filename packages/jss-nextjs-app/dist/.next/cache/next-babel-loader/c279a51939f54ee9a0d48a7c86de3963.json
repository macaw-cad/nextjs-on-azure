{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\jss\\\\nextjsonazure\\\\packages\\\\jss-nextjs-app\\\\src\\\\components\\\\fields\\\\Styleguide-FieldUsage-Checkbox.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getFieldValue } from '@sitecore-jss/sitecore-jss-nextjs';\nimport StyleguideSpecimen from 'components/styleguide/Styleguide-Specimen';\n\n/**\r\n * Demonstrates usage of a Checkbox (boolean) content field within JSS.\r\n */\nconst StyleguideFieldUsageCheckbox = props => /*#__PURE__*/_jsxDEV(StyleguideSpecimen, _objectSpread(_objectSpread({}, props), {}, {\n  e2eId: \"styleguide-fieldusage-checkbox\",\n  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [props.fields && props.fields.checkbox && props.fields.checkbox.value && /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), \" is true\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), !props.fields || !props.fields.checkbox || !props.fields.checkbox.value && /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), \" is false\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), getFieldValue(props.fields, 'checkbox2', false) && /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"checkbox2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), \" is true\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), !getFieldValue(props.fields, 'checkbox2', false) && /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"checkbox2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), \" is false\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this)\n}), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n\nexport default StyleguideFieldUsageCheckbox;","map":{"version":3,"sources":["D:/projects/jss/nextjsonazure/packages/jss-nextjs-app/src/components/fields/Styleguide-FieldUsage-Checkbox.tsx"],"names":["getFieldValue","StyleguideSpecimen","StyleguideFieldUsageCheckbox","props","fields","checkbox","value"],"mappings":";;;;;;;;;AAAA,SAAgBA,aAAhB,QAAqC,mCAArC;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;;AAWA;AACA;AACA;AACA,MAAMC,4BAA4B,GAAIC,KAAD,iBACnC,QAAC,kBAAD,kCAAwBA,KAAxB;AAA+B,EAAA,KAAK,EAAC,gCAArC;AAAA,yBAEE;AAAA,eAMGA,KAAK,CAACC,MAAN,IAAgBD,KAAK,CAACC,MAAN,CAAaC,QAA7B,IAAyCF,KAAK,CAACC,MAAN,CAAaC,QAAb,CAAsBC,KAA/D,iBACC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,EAWG,CAACH,KAAK,CAACC,MAAP,IACC,CAACD,KAAK,CAACC,MAAN,CAAaC,QADf,IAEE,CAACF,KAAK,CAACC,MAAN,CAAaC,QAAb,CAAsBC,KAAvB,iBACC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdN,EAkBGN,aAAa,CAACG,KAAK,CAACC,MAAP,EAAe,WAAf,EAA4B,KAA5B,CAAb,iBACC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,EAuBG,CAACJ,aAAa,CAACG,KAAK,CAACC,MAAP,EAAe,WAAf,EAA4B,KAA5B,CAAd,iBACC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,QADF;;AAmCA,eAAeF,4BAAf","sourcesContent":["import { Field, getFieldValue } from '@sitecore-jss/sitecore-jss-nextjs';\r\nimport StyleguideSpecimen from 'components/styleguide/Styleguide-Specimen';\r\nimport { StyleguideComponentProps, StyleguideSpecimenFields } from 'lib/component-props';\r\n\r\ntype StyleguideFieldUsageCheckboxProps = StyleguideComponentProps &\r\n  StyleguideSpecimenFields & {\r\n    fields: {\r\n      checkbox: Field<boolean>;\r\n      checkbox2: Field<boolean>;\r\n    };\r\n  };\r\n\r\n/**\r\n * Demonstrates usage of a Checkbox (boolean) content field within JSS.\r\n */\r\nconst StyleguideFieldUsageCheckbox = (props: StyleguideFieldUsageCheckboxProps): JSX.Element => (\r\n  <StyleguideSpecimen {...props} e2eId=\"styleguide-fieldusage-checkbox\">\r\n    {/* Checkbox fields do not have the ability to be inline edited, so they are directly accessed via their value: */}\r\n    <ul>\r\n      {/*\r\n        The getFieldValue helper allows safely extracting a field value that could be undefined,\r\n        without needing to check that props.fields or props.fields.checkbox are traversable,\r\n        and allowing the specification of an optional default value (default is undefined if unspecified).\r\n       */}\r\n      {props.fields && props.fields.checkbox && props.fields.checkbox.value && (\r\n        <li>\r\n          <code>checkbox</code> is true\r\n        </li>\r\n      )}\r\n      {!props.fields ||\r\n        !props.fields.checkbox ||\r\n        (!props.fields.checkbox.value && (\r\n          <li>\r\n            <code>checkbox</code> is false\r\n          </li>\r\n        ))}\r\n      {getFieldValue(props.fields, 'checkbox2', false) && (\r\n        <li>\r\n          <code>checkbox2</code> is true\r\n        </li>\r\n      )}\r\n      {!getFieldValue(props.fields, 'checkbox2', false) && (\r\n        <li>\r\n          <code>checkbox2</code> is false\r\n        </li>\r\n      )}\r\n    </ul>\r\n  </StyleguideSpecimen>\r\n);\r\n\r\nexport default StyleguideFieldUsageCheckbox;\r\n"]},"metadata":{},"sourceType":"module"}