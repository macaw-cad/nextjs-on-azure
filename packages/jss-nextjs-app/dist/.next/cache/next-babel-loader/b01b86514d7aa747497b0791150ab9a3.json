{"ast":null,"code":"import _defineProperty from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withPlaceholder, withSitecoreContext, Text } from '@sitecore-jss/sitecore-jss-nextjs';\nimport StyleguideSpecimen from './Styleguide-Specimen';\n\n/**\r\n * Demonstrates advanced component techniques in JSS.\r\n * This example implements a simple-looking tabs component.\r\n * Each tab is itself a child component added to a placeholder defined on the tabs component.\r\n * The tab component introspects its child components to render the tab headings (i.e. the tab children render partial content in two places).\r\n * When this component is edited in Sitecore Experience Editor, the tabbing behavior is turned off and each tab stacks on top of each other\r\n * for easy inline editing.\r\n */\nvar StyleguideLayoutTabs = /*#__PURE__*/function (_React$Component) {\n  _inherits(StyleguideLayoutTabs, _React$Component);\n\n  var _super = _createSuper(StyleguideLayoutTabs);\n\n  function StyleguideLayoutTabs(props) {\n    var _this;\n\n    _classCallCheck(this, StyleguideLayoutTabs);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      activeTabIndex: 0\n    };\n    _this.setActiveTab = _this.setActiveTab.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(StyleguideLayoutTabs, [{\n    key: \"setActiveTab\",\n    value: function setActiveTab(index) {\n      this.setState({\n        activeTabIndex: index\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          tabsPlaceholder = _this$props.tabsPlaceholder,\n          sitecoreContext = _this$props.sitecoreContext;\n      var validTabIndex = 0;\n      var isEditing = sitecoreContext && sitecoreContext.pageEditing;\n      return /*#__PURE__*/_jsxs(StyleguideSpecimen, _objectSpread(_objectSpread({}, this.props), {}, {\n        e2eId: \"styleguide-layout-tabs\",\n        children: [/*#__PURE__*/_jsx(\"ul\", {\n          className: \"nav nav-tabs\",\n          children: !isEditing && (tabsPlaceholder || []).filter(function (tab) {\n            return tab.props && tab.props.fields;\n          }).map(function (tab, index) {\n            return /*#__PURE__*/_jsx(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsx(\"a\", {\n                className: \"nav-link \".concat(index === _this2.state.activeTabIndex ? 'active' : null),\n                onClick: function onClick() {\n                  return _this2.setActiveTab(index);\n                },\n                href: \"#t\",\n                children: /*#__PURE__*/_jsx(Text, {\n                  field: tab.props.fields.title\n                })\n              })\n            }, \"tab\".concat(index));\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"p-3 border-left border-right border-bottom\",\n          children: (tabsPlaceholder || []).map(function (tab) {\n            var isValid = tab.props && tab.props.fields; // allow experience editor markup components to render\n\n            if (!isValid && isEditing) return tab;\n            validTabIndex += 1; // we render the tab either if it's active - or we're editing,\n            // in which case we stack all tabs for visual editing\n\n            if (_this2.state.activeTabIndex === validTabIndex - 1 || isEditing) {\n              return tab;\n            }\n\n            return null;\n          })\n        })]\n      }));\n    }\n  }]);\n\n  return StyleguideLayoutTabs;\n}(React.Component); // This is a _higher order component_ that will wrap our component and inject placeholder\n// data into it as a prop (in this case, props.tabsPlaceholder).\n// this another option compared to using the <Placeholder> component;\n// in this case, chosen because we primarily need access to the _data_\n// of the placeholder.\n\n\nvar tabsComponentWithPlaceholderInjected = withPlaceholder({\n  placeholder: 'jss-tabs',\n  prop: 'tabsPlaceholder'\n})(StyleguideLayoutTabs); // We need to know if experience editor is active, to disable the dynamic tab behavior for editing.\n// Using the same technique as injecting the placeholder, we wrap the component again to inject the\n// `sitecoreContext` prop.\n\nvar tabsWithPlaceholderAndSitecoreContext = withSitecoreContext()(tabsComponentWithPlaceholderInjected);\nexport default tabsWithPlaceholderAndSitecoreContext;","map":null,"metadata":{},"sourceType":"module"}