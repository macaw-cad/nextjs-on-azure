{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\jss\\\\nextjsonazure\\\\packages\\\\jss-nextjs-app-new\\\\src\\\\components\\\\graphql\\\\GraphQL-Layout.tsx\";\nimport { Placeholder, useSitecoreContext } from '@sitecore-jss/sitecore-jss-nextjs';\n\nconst GraphQLLayout = ({\n  rendering\n}) => {\n  const {\n    sitecoreContext\n  } = useSitecoreContext();\n  const disconnectedMode = sitecoreContext.route && sitecoreContext.route.layoutId === 'available-in-connected-mode';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-e2e-id\": \"graphql-layout\",\n    children: [disconnectedMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This app is running in disconnected mode. GraphQL requires connected mode, headless connected mode, or integrated mode to work.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Libraries such as \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"graphql-tools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 31\n        }, this), \" can provide GraphQL API mocking capabilities, which could enable disconnected GraphQL. This is not supported out of the box, however.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"To view the GraphQL samples, restart the app using \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"jss start:connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 64\n        }, this), \"\\xA0 or deploy the app to Sitecore to run in integrated mode per the JSS documentation.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !disconnectedMode && /*#__PURE__*/_jsxDEV(Placeholder, {\n      name: \"jss-graphql-layout\",\n      rendering: rendering\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\nexport default GraphQLLayout;","map":{"version":3,"sources":["D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/src/components/graphql/GraphQL-Layout.tsx"],"names":["Placeholder","useSitecoreContext","GraphQLLayout","rendering","sitecoreContext","disconnectedMode","route","layoutId"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,kBAAtB,QAAgD,mCAAhD;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0D;AAC9E,QAAM;AAAEC,IAAAA;AAAF,MAAsBH,kBAAkB,EAA9C;AAEA,QAAMI,gBAAgB,GACpBD,eAAe,CAACE,KAAhB,IAAyBF,eAAe,CAACE,KAAhB,CAAsBC,QAAtB,KAAmC,6BAD9D;AAGA,sBACE;AAAK,mBAAY,gBAAjB;AAAA,eACGF,gBAAgB,iBACf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,sDACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADpB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAUE;AAAA,uFACqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADrD;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA,oBAFJ,EAmBG,CAACA,gBAAD,iBAAqB,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC,oBAAlB;AAAuC,MAAA,SAAS,EAAEF;AAAlD;AAAA;AAAA;AAAA;AAAA,YAnBxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA7BD;;AA+BA,eAAeD,aAAf","sourcesContent":["import { Placeholder, useSitecoreContext } from '@sitecore-jss/sitecore-jss-nextjs';\r\nimport { StyleguideComponentProps, StyleguideSitecoreContextValue } from 'lib/component-props';\r\n\r\nconst GraphQLLayout = ({ rendering }: StyleguideComponentProps): JSX.Element => {\r\n  const { sitecoreContext } = useSitecoreContext<StyleguideSitecoreContextValue>();\r\n\r\n  const disconnectedMode =\r\n    sitecoreContext.route && sitecoreContext.route.layoutId === 'available-in-connected-mode';\r\n\r\n  return (\r\n    <div data-e2e-id=\"graphql-layout\">\r\n      {disconnectedMode && (\r\n        <>\r\n          <p>\r\n            This app is running in disconnected mode. GraphQL requires connected mode, headless\r\n            connected mode, or integrated mode to work.\r\n          </p>\r\n          <p>\r\n            Libraries such as <code>graphql-tools</code> can provide GraphQL API mocking\r\n            capabilities, which could enable disconnected GraphQL. This is not supported out of the\r\n            box, however.\r\n          </p>\r\n          <p>\r\n            To view the GraphQL samples, restart the app using <code>jss start:connected</code>\r\n            &nbsp; or deploy the app to Sitecore to run in integrated mode per the JSS\r\n            documentation.\r\n          </p>\r\n        </>\r\n      )}\r\n      {!disconnectedMode && <Placeholder name=\"jss-graphql-layout\" rendering={rendering} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphQLLayout;\r\n"]},"metadata":{},"sourceType":"module"}