{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { withSitecoreContext } from '@sitecore-jss/sitecore-jss-nextjs';\nimport { trackingApi } from '@sitecore-jss/sitecore-jss-tracking';\nimport { dataFetcher } from 'lib/data-fetcher';\nimport config from 'temp/config';\nimport StyleguideSpecimen from './Styleguide-Specimen';\n\n/**\r\n * Demonstrates analytics tracking patterns (xDB)\r\n */\nclass StyleguideTracking extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"event\", void 0);\n\n    _defineProperty(this, \"goal\", void 0);\n\n    _defineProperty(this, \"outcomeName\", void 0);\n\n    _defineProperty(this, \"outcomeValue\", void 0);\n\n    _defineProperty(this, \"campaign\", void 0);\n\n    _defineProperty(this, \"pageId\", void 0);\n\n    _defineProperty(this, \"pageUrl\", void 0);\n\n    _defineProperty(this, \"trackingApiOptions\", void 0);\n\n    this.event = /*#__PURE__*/React.createRef();\n    this.goal = /*#__PURE__*/React.createRef();\n    this.outcomeName = /*#__PURE__*/React.createRef();\n    this.outcomeValue = /*#__PURE__*/React.createRef();\n    this.campaign = /*#__PURE__*/React.createRef();\n    this.pageId = /*#__PURE__*/React.createRef();\n    this.pageUrl = /*#__PURE__*/React.createRef();\n    this.trackingApiOptions = {\n      host: config.sitecoreApiHost,\n      querystringParams: {\n        sc_apikey: config.sitecoreApiKey\n      },\n      fetcher: dataFetcher\n    };\n  }\n\n  submitEvent() {\n    if (!this.event.current) return;\n    trackingApi.trackEvent([{\n      eventId: this.event.current.value\n    }], this.trackingApiOptions).then(() => alert('Page event pushed')).catch(error => alert(error));\n  }\n\n  submitGoal() {\n    if (!this.goal.current) return;\n    trackingApi.trackEvent([{\n      goalId: this.goal.current.value\n    }], this.trackingApiOptions).then(() => alert('Goal pushed')).catch(error => alert(error));\n  }\n\n  submitOutcome() {\n    if (!this.pageUrl.current || !this.pageId.current || !this.outcomeName.current || !this.outcomeValue.current) {\n      return;\n    }\n\n    trackingApi.trackEvent([{\n      url: this.pageUrl.current.value,\n      pageId: this.pageId.current.value,\n      outcomeId: this.outcomeName.current.value,\n      currencyCode: 'USD',\n      monetaryValue: this.outcomeValue.current.value\n    }], this.trackingApiOptions).then(() => alert('Outcome pushed')).catch(error => alert(error));\n  }\n\n  triggerCampaign() {\n    if (!this.campaign.current) return;\n    trackingApi.trackEvent([{\n      campaignId: this.campaign.current.value\n    }], this.trackingApiOptions).then(() => alert('Campaign set')).catch(error => alert(error));\n  }\n\n  submitPageView() {\n    if (!this.pageId.current || !this.pageUrl.current) return;\n    trackingApi.trackEvent([{\n      pageId: this.pageId.current.value,\n      url: this.pageUrl.current.value\n    }], this.trackingApiOptions).then(() => alert('Page view pushed')).catch(error => alert(error));\n  }\n\n  abandonSession() {\n    const abandonOptions = _objectSpread({\n      action: 'flush'\n    }, this.trackingApiOptions);\n\n    trackingApi.trackEvent([], abandonOptions).then(() => alert('Interaction has been terminated and its data pushed to xConnect.')).catch(error => alert(error));\n  }\n\n  submitBatching() {\n    trackingApi.trackEvent([{\n      eventId: 'Download'\n    }, {\n      goalId: 'Instant Demo'\n    }, {\n      outcomeId: 'Opportunity'\n    }, {\n      pageId: '{110D559F-DEA5-42EA-9C1C-8A5DF7E70EF9}',\n      url: '/arbitrary/url/you/own'\n    }, // this goal will be added to the new page/route ID set above, not the current route\n    {\n      goalId: 'Register'\n    }], this.trackingApiOptions).then(() => alert('Batch of events pushed')).catch(error => alert(error));\n  }\n\n  render() {\n    const disconnectedMode = this.props.sitecoreContext.itemId === 'available-in-connected-mode';\n    return /*#__PURE__*/_jsxs(StyleguideSpecimen, _objectSpread(_objectSpread({}, this.props), {}, {\n      e2eId: \"styleguide-tracking\",\n      children: [disconnectedMode && /*#__PURE__*/_jsx(\"p\", {\n        children: \"The tracking API is only available in connected, integrated, or headless modes.\"\n      }), !disconnectedMode && /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsxs(\"p\", {\n          className: \"alert alert-warning\",\n          children: [\"Note: The JSS tracker API is disabled by default. Consult the\", ' ', /*#__PURE__*/_jsx(\"a\", {\n            href: \"https://jss.sitecore.com/docs/fundamentals/services/tracking\",\n            children: \"tracking documentation\"\n          }), ' ', \"to enable it.\"]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxs(\"fieldset\", {\n            className: \"form-group col-sm\",\n            children: [/*#__PURE__*/_jsx(\"legend\", {\n              children: \"Event\"\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              children: [\"Events are defined in \", /*#__PURE__*/_jsx(\"code\", {\n                children: \"/sitecore/system/Settings/Analytics/Page Events\"\n              })]\n            }), /*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"event\",\n              children: \"Event GUID or Name\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              id: \"event\",\n              className: \"form-control\",\n              ref: this.event\n            }), /*#__PURE__*/_jsx(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary mt-3\",\n              onClick: this.submitEvent.bind(this),\n              children: \"Submit\"\n            })]\n          }), /*#__PURE__*/_jsxs(\"fieldset\", {\n            className: \"form-group col-sm\",\n            children: [/*#__PURE__*/_jsx(\"legend\", {\n              children: \"Goal\"\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              children: [\"Goals are defined in \", /*#__PURE__*/_jsx(\"code\", {\n                children: \"/sitecore/system/Marketing Control Panel/Goals\"\n              })]\n            }), /*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"goal\",\n              children: \"Goal GUID or Name\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"goal\",\n              ref: this.goal,\n              placeholder: \"i.e. Register\"\n            }), /*#__PURE__*/_jsx(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary mt-3\",\n              onClick: this.submitGoal.bind(this),\n              children: \"Submit\"\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxs(\"fieldset\", {\n            className: \"form-group col-sm\",\n            children: [/*#__PURE__*/_jsx(\"legend\", {\n              children: \"Outcome\"\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              children: [\"Outcomes are defined in\", ' ', /*#__PURE__*/_jsx(\"code\", {\n                children: \"/sitecore/system/Marketing Control Panel/Outcomes\"\n              })]\n            }), /*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"outcomeName\",\n              children: \"Outcome GUID or Name\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"outcomeName\",\n              ref: this.outcomeName,\n              placeholder: \"i.e. Marketing Lead\"\n            }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"outcomeValue\",\n              children: \"Monetary Value (optional)\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"number\",\n              className: \"form-control\",\n              id: \"outcomeValue\",\n              ref: this.outcomeValue,\n              placeholder: \"i.e. 1337.00\"\n            }), /*#__PURE__*/_jsx(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary mt-3\",\n              onClick: this.submitOutcome.bind(this),\n              children: \"Submit\"\n            })]\n          }), /*#__PURE__*/_jsxs(\"fieldset\", {\n            className: \"form-group col-sm\",\n            children: [/*#__PURE__*/_jsx(\"legend\", {\n              children: \"Campaign\"\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              children: [\"Campaigns are defined in\", ' ', /*#__PURE__*/_jsx(\"code\", {\n                children: \"/sitecore/system/Marketing Control Panel/Campaigns\"\n              })]\n            }), /*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"campaign\",\n              children: \"Campaign GUID or Name\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"campaign\",\n              ref: this.campaign\n            }), /*#__PURE__*/_jsx(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary mt-3\",\n              onClick: this.triggerCampaign.bind(this),\n              children: \"Submit\"\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxs(\"fieldset\", {\n            className: \"form-group col-sm\",\n            children: [/*#__PURE__*/_jsx(\"legend\", {\n              children: \"Page View\"\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              children: [\"Track arbitrary page views for custom routing or offline use. Note that Layout Service tracks page views by default unless \", /*#__PURE__*/_jsx(\"code\", {\n                children: \"tracking=false\"\n              }), \" is passed in its query string.\"]\n            }), /*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"pageId\",\n              children: \"Page Item GUID\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"pageId\",\n              ref: this.pageId,\n              placeholder: \"i.e. {11111111-1111-1111-1111-111111111111}\"\n            }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"pageUrl\",\n              children: \"Page URL\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"pageUrl\",\n              ref: this.pageUrl,\n              placeholder: \"i.e. /foo/bar\"\n            }), /*#__PURE__*/_jsx(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary mt-3\",\n              onClick: this.submitPageView.bind(this),\n              children: \"Submit\"\n            })]\n          }), /*#__PURE__*/_jsxs(\"fieldset\", {\n            className: \"form-group col-sm\",\n            children: [/*#__PURE__*/_jsx(\"legend\", {\n              children: \"Batching\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              children: \"The tracking API supports pushing a whole batch of events in a single request. This can be useful for queuing strategies or offline PWA usage.\"\n            }), /*#__PURE__*/_jsx(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: this.submitBatching.bind(this),\n              children: \"Submit Batch of Events\"\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxs(\"fieldset\", {\n            className: \"form-group col-sm\",\n            children: [/*#__PURE__*/_jsx(\"legend\", {\n              children: \"Interaction Control\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              children: \"Tracking data is not pushed into the xConnect service until your session ends on the Sitecore server. Click this button to instantly end your session and flush the data - great for debugging and testing.\"\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              className: \"alert alert-warning\",\n              children: [\"Note: By default \", /*#__PURE__*/_jsx(\"em\", {\n                children: \"anonymous\"\n              }), \" contacts will not be shown in Experience Profile. If your interactions are not showing up in Experience Profile, you may need to\", ' ', /*#__PURE__*/_jsx(\"a\", {\n                href: \"https://doc.sitecore.net/developers/xp/xconnect/xconnect-search-indexer/enable-anonymous-contact-indexing.html\",\n                children: \"enable anonymous contact indexing.\"\n              })]\n            }), /*#__PURE__*/_jsx(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: this.abandonSession.bind(this),\n              children: \"End Interaction\"\n            })]\n          })\n        })]\n      })]\n    }));\n  }\n\n}\n\nexport default withSitecoreContext()(StyleguideTracking);","map":null,"metadata":{},"sourceType":"module"}