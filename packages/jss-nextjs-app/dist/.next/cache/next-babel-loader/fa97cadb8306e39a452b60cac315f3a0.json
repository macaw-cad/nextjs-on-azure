{"ast":null,"code":"import { EditingRenderMiddleware } from '@sitecore-jss/sitecore-jss-nextjs/middleware';\n/**\r\n * This Next.js API route is used to handle POST requests from the Sitecore Experience Editor.\r\n * This route should match the `serverSideRenderingEngineEndpointUrl` in your Sitecore configuration,\r\n * which is set to \"http://localhost:3000/api/editing/render\" by default (see \\sitecore\\config\\JssNextWeb.config).\r\n *\r\n * The `EditingRenderMiddleware` will\r\n *  1. Extract editing data from the Experience Editor POST request\r\n *  2. Stash this data (for later use in the page render request) via the `EditingDataService`, which returns a key for retrieval\r\n *  3. Enable Next.js Preview Mode, passing our stashed editing data key as preview data\r\n *  4. Invoke the actual page render request, passing along the Preview Mode cookies.\r\n *     This allows retrieval of the editing data in preview context (via the `EditingDataService`) - see `SitecorePagePropsFactory`\r\n *  5. Return the rendered page HTML to the Sitecore Experience Editor\r\n */\n// Bump body size limit (1mb by default) for Experience Editor payload\n// See https://nextjs.org/docs/api-routes/api-middlewares#custom-config\n\nexport const config = {\n  api: {\n    bodyParser: {\n      sizeLimit: '2mb'\n    }\n  }\n}; // Wire up the EditingRenderMiddleware handler\n\nconst handler = new EditingRenderMiddleware().getHandler();\nexport default handler;","map":null,"metadata":{},"sourceType":"module"}