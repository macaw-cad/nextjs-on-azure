{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\jss\\\\nextjsonazure\\\\packages\\\\jss-nextjs-app-new\\\\src\\\\components\\\\graphql\\\\GraphQL-ConnectedDemo.tsx\";\nimport React from 'react';\nimport { Text, Link, useComponentProps, JSS_MODE_DISCONNECTED, GraphQLRequestClient } from '@sitecore-jss/sitecore-jss-nextjs';\nimport NextLink from 'next/link';\nimport { ConnectedDemoQueryDocument } from './GraphQL-ConnectedDemo.graphql';\nimport config from 'temp/config';\n\nconst GraphQLConnectedDemo = props => {\n  var _data$datasource$samp, _data$datasource$samp2, _data$datasource$samp3, _data$datasource$samp4, _data$datasource$samp5, _data$datasource$samp6, _data$datasource$samp7, _data$datasource$samp8, _data$datasource$samp9, _data$datasource$samp10, _data$contextItem$pag;\n\n  const data = props.rendering.uid ? useComponentProps(props.rendering.uid) : undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-e2e-id\": \"graphql-connected\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"GraphQL Connected Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected GraphQL executes GraphQL queries directly against the Sitecore GraphQL endpoint. This example runs the query server-side using component-level \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"getStaticProps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 71\n      }, this), \"/\", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"getServerSideProps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \", a feature of the Sitecore JSS Next.js SDK. These are aggregated during the the Next.js page-level \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"getStaticProps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 54\n      }, this), \"/\", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"getServerSideProps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" execution.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), data && data.datasource && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Datasource Item (via Connected GraphQL)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), \"id: \", data.datasource.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), \"name: \", data.datasource.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), \"sample1: \", (_data$datasource$samp = data.datasource.sample1) === null || _data$datasource$samp === void 0 ? void 0 : _data$datasource$samp.value, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), \"sample1 (editable): \", /*#__PURE__*/_jsxDEV(Text, {\n        field: (_data$datasource$samp2 = data.datasource.sample1) === null || _data$datasource$samp2 === void 0 ? void 0 : _data$datasource$samp2.jsonValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), \"sample2:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"text: \", (_data$datasource$samp3 = data.datasource.sample2) === null || _data$datasource$samp3 === void 0 ? void 0 : _data$datasource$samp3.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"url: \", (_data$datasource$samp4 = data.datasource.sample2) === null || _data$datasource$samp4 === void 0 ? void 0 : _data$datasource$samp4.url]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"target: \", (_data$datasource$samp5 = data.datasource.sample2) === null || _data$datasource$samp5 === void 0 ? void 0 : _data$datasource$samp5.target]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"editable: \", /*#__PURE__*/_jsxDEV(Link, {\n            field: (_data$datasource$samp6 = data.datasource.sample2) === null || _data$datasource$samp6 === void 0 ? void 0 : _data$datasource$samp6.jsonValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"field type: \", (_data$datasource$samp7 = data.datasource.sample2) === null || _data$datasource$samp7 === void 0 ? void 0 : (_data$datasource$samp8 = _data$datasource$samp7.definition) === null || _data$datasource$samp8 === void 0 ? void 0 : _data$datasource$samp8.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"field is shared?: \", (_data$datasource$samp9 = data.datasource.sample2) === null || _data$datasource$samp9 === void 0 ? void 0 : (_data$datasource$samp10 = _data$datasource$samp9.definition) === null || _data$datasource$samp10 === void 0 ? void 0 : _data$datasource$samp10.shared.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), data && data.contextItem && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Route Item (via Connected GraphQL)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), \"id: \", data.contextItem.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), \"page title: \", (_data$contextItem$pag = data.contextItem.pageTitle) === null || _data$contextItem$pag === void 0 ? void 0 : _data$contextItem$pag.value, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), \"children:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.contextItem.children.results.map(child => {\n          var _routeItem$pageTitle, _routeItem$pageTitle2;\n\n          const routeItem = child;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(NextLink, {\n              href: routeItem.url.path,\n              children: (_routeItem$pageTitle = routeItem.pageTitle) === null || _routeItem$pageTitle === void 0 ? void 0 : _routeItem$pageTitle.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), \"(editable title too! \", /*#__PURE__*/_jsxDEV(Text, {\n              field: (_routeItem$pageTitle2 = routeItem.pageTitle) === null || _routeItem$pageTitle2 === void 0 ? void 0 : _routeItem$pageTitle2.jsonValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 40\n            }, this), \")\"]\n          }, routeItem.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n/**\r\n * Will be called during SSG\r\n * @param {ComponentRendering} rendering\r\n * @param {LayoutServiceData} layoutData\r\n * @param {GetStaticPropsContext} context\r\n */\n\n\nexport const getStaticProps = async (rendering, layoutData) => {\n  var _layoutData$sitecore, _layoutData$sitecore$, _layoutData$sitecore2, _layoutData$sitecore3;\n\n  if (process.env.JSS_MODE === JSS_MODE_DISCONNECTED) {\n    return null;\n  }\n\n  const graphQLClient = new GraphQLRequestClient(config.graphQLEndpoint, {\n    apiKey: config.sitecoreApiKey\n  });\n  const result = await graphQLClient.request(ConnectedDemoQueryDocument, {\n    datasource: rendering.dataSource,\n    contextItem: layoutData === null || layoutData === void 0 ? void 0 : (_layoutData$sitecore = layoutData.sitecore) === null || _layoutData$sitecore === void 0 ? void 0 : (_layoutData$sitecore$ = _layoutData$sitecore.route) === null || _layoutData$sitecore$ === void 0 ? void 0 : _layoutData$sitecore$.itemId,\n    language: layoutData === null || layoutData === void 0 ? void 0 : (_layoutData$sitecore2 = layoutData.sitecore) === null || _layoutData$sitecore2 === void 0 ? void 0 : (_layoutData$sitecore3 = _layoutData$sitecore2.context) === null || _layoutData$sitecore3 === void 0 ? void 0 : _layoutData$sitecore3.language\n  });\n  return result;\n};\n/**\r\n * Will be called during SSR\r\n * @param {ComponentRendering} rendering\r\n * @param {LayoutServiceData} layoutData\r\n * @param {GetServerSidePropsContext} context\r\n */\n\nexport const getServerSideProps = async (rendering, layoutData) => {\n  var _layoutData$sitecore4, _layoutData$sitecore5, _layoutData$sitecore6, _layoutData$sitecore7;\n\n  if (process.env.JSS_MODE === JSS_MODE_DISCONNECTED) {\n    return null;\n  }\n\n  const graphQLClient = new GraphQLRequestClient(config.graphQLEndpoint, {\n    apiKey: config.sitecoreApiKey\n  });\n  const result = await graphQLClient.request(ConnectedDemoQueryDocument, {\n    datasource: rendering.dataSource,\n    contextItem: layoutData === null || layoutData === void 0 ? void 0 : (_layoutData$sitecore4 = layoutData.sitecore) === null || _layoutData$sitecore4 === void 0 ? void 0 : (_layoutData$sitecore5 = _layoutData$sitecore4.route) === null || _layoutData$sitecore5 === void 0 ? void 0 : _layoutData$sitecore5.itemId,\n    language: layoutData === null || layoutData === void 0 ? void 0 : (_layoutData$sitecore6 = layoutData.sitecore) === null || _layoutData$sitecore6 === void 0 ? void 0 : (_layoutData$sitecore7 = _layoutData$sitecore6.context) === null || _layoutData$sitecore7 === void 0 ? void 0 : _layoutData$sitecore7.language\n  });\n  return result;\n};\nexport default GraphQLConnectedDemo;","map":{"version":3,"sources":["D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/src/components/graphql/GraphQL-ConnectedDemo.tsx"],"names":["React","Text","Link","useComponentProps","JSS_MODE_DISCONNECTED","GraphQLRequestClient","NextLink","ConnectedDemoQueryDocument","config","GraphQLConnectedDemo","props","data","rendering","uid","undefined","datasource","id","name","sample1","value","jsonValue","sample2","text","url","target","definition","type","shared","toString","contextItem","pageTitle","children","results","map","child","routeItem","path","getStaticProps","layoutData","process","env","JSS_MODE","graphQLClient","graphQLEndpoint","apiKey","sitecoreApiKey","result","request","dataSource","sitecore","route","itemId","language","context","getServerSideProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Text,\r\n  Link,\r\n  GetServerSideComponentProps,\r\n  GetStaticComponentProps,\r\n  useComponentProps,\r\n  JSS_MODE_DISCONNECTED,\r\n  GraphQLRequestClient,\r\n} from '@sitecore-jss/sitecore-jss-nextjs';\r\nimport NextLink from 'next/link';\r\nimport {\r\n  ConnectedDemoQueryDocument,\r\n  AppRoute,\r\n  Item,\r\n  GraphQlConnectedDemo as GrapQLConnectedDemoDatasource,\r\n} from './GraphQL-ConnectedDemo.graphql';\r\nimport { StyleguideComponentProps } from 'lib/component-props';\r\nimport config from 'temp/config';\r\n\r\ntype RouteItem = AppRoute & Item;\r\n\r\ntype GraphQLConnectedDemoData = {\r\n  datasource: GrapQLConnectedDemoDatasource;\r\n  contextItem: RouteItem;\r\n};\r\n\r\nconst GraphQLConnectedDemo = (props: StyleguideComponentProps): JSX.Element => {\r\n  const data = props.rendering.uid\r\n    ? useComponentProps<GraphQLConnectedDemoData>(props.rendering.uid)\r\n    : undefined;\r\n\r\n  return (\r\n    <div data-e2e-id=\"graphql-connected\">\r\n      <h2>GraphQL Connected Demo</h2>\r\n\r\n      <p>\r\n        Connected GraphQL executes GraphQL queries directly against the Sitecore GraphQL endpoint.\r\n        This example runs the query server-side using component-level <code>getStaticProps</code>/\r\n        <code>getServerSideProps</code>, a feature of the Sitecore JSS Next.js SDK. These are\r\n        aggregated during the the Next.js page-level <code>getStaticProps</code>/\r\n        <code>getServerSideProps</code> execution.\r\n      </p>\r\n\r\n      {data && data.datasource && (\r\n        <div>\r\n          <h4>Datasource Item (via Connected GraphQL)</h4>\r\n          id: {data.datasource.id}\r\n          <br />\r\n          name: {data.datasource.name}\r\n          <br />\r\n          sample1: {data.datasource.sample1?.value}\r\n          <br />\r\n          sample1 (editable): <Text field={data.datasource.sample1?.jsonValue} />\r\n          <br />\r\n          sample2:\r\n          <br />\r\n          <ul>\r\n            <li>text: {data.datasource.sample2?.text}</li>\r\n            <li>url: {data.datasource.sample2?.url}</li>\r\n            <li>target: {data.datasource.sample2?.target}</li>\r\n            <li>\r\n              editable: <Link field={data.datasource.sample2?.jsonValue} />\r\n            </li>\r\n            <li>field type: {data.datasource.sample2?.definition?.type}</li>\r\n            <li>field is shared?: {data.datasource.sample2?.definition?.shared.toString()}</li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n      {data && data.contextItem && (\r\n        <div>\r\n          <h4>Route Item (via Connected GraphQL)</h4>\r\n          id: {data.contextItem.id}\r\n          <br />\r\n          page title: {data.contextItem.pageTitle?.value}\r\n          <br />\r\n          children:\r\n          <ul>\r\n            {data.contextItem.children.results.map((child) => {\r\n              const routeItem = child as RouteItem;\r\n\r\n              return (\r\n                <li key={routeItem.id}>\r\n                  <NextLink href={routeItem.url.path}>{routeItem.pageTitle?.value}</NextLink>\r\n                  (editable title too! <Text field={routeItem.pageTitle?.jsonValue} />)\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Will be called during SSG\r\n * @param {ComponentRendering} rendering\r\n * @param {LayoutServiceData} layoutData\r\n * @param {GetStaticPropsContext} context\r\n */\r\nexport const getStaticProps: GetStaticComponentProps = async (rendering, layoutData) => {\r\n  if (process.env.JSS_MODE === JSS_MODE_DISCONNECTED) {\r\n    return null;\r\n  }\r\n\r\n  const graphQLClient = new GraphQLRequestClient(config.graphQLEndpoint, {\r\n    apiKey: config.sitecoreApiKey,\r\n  });\r\n\r\n  const result = await graphQLClient.request<GraphQLConnectedDemoData>(ConnectedDemoQueryDocument, {\r\n    datasource: rendering.dataSource,\r\n    contextItem: layoutData?.sitecore?.route?.itemId,\r\n    language: layoutData?.sitecore?.context?.language,\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Will be called during SSR\r\n * @param {ComponentRendering} rendering\r\n * @param {LayoutServiceData} layoutData\r\n * @param {GetServerSidePropsContext} context\r\n */\r\nexport const getServerSideProps: GetServerSideComponentProps = async (rendering, layoutData) => {\r\n  if (process.env.JSS_MODE === JSS_MODE_DISCONNECTED) {\r\n    return null;\r\n  }\r\n\r\n  const graphQLClient = new GraphQLRequestClient(config.graphQLEndpoint, {\r\n    apiKey: config.sitecoreApiKey,\r\n  });\r\n\r\n  const result = await graphQLClient.request<GraphQLConnectedDemoData>(ConnectedDemoQueryDocument, {\r\n    datasource: rendering.dataSource,\r\n    contextItem: layoutData?.sitecore?.route?.itemId,\r\n    language: layoutData?.sitecore?.context?.language,\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\nexport default GraphQLConnectedDemo;\r\n"]},"metadata":{},"sourceType":"module"}