{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Text, Link, useComponentProps, JSS_MODE_DISCONNECTED, GraphQLRequestClient } from '@sitecore-jss/sitecore-jss-nextjs';\nimport NextLink from 'next/link';\nimport { ConnectedDemoQueryDocument } from './GraphQL-ConnectedDemo.graphql';\nimport config from 'temp/config';\n\nconst GraphQLConnectedDemo = props => {\n  var _data$datasource$samp, _data$datasource$samp2, _data$datasource$samp3, _data$datasource$samp4, _data$datasource$samp5, _data$datasource$samp6, _data$datasource$samp7, _data$datasource$samp8, _data$datasource$samp9, _data$datasource$samp10, _data$contextItem$pag;\n\n  const data = props.rendering.uid ? useComponentProps(props.rendering.uid) : undefined;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    \"data-e2e-id\": \"graphql-connected\",\n    children: [/*#__PURE__*/_jsx(\"h2\", {\n      children: \"GraphQL Connected Demo\"\n    }), /*#__PURE__*/_jsxs(\"p\", {\n      children: [\"Connected GraphQL executes GraphQL queries directly against the Sitecore GraphQL endpoint. This example runs the query server-side using component-level \", /*#__PURE__*/_jsx(\"code\", {\n        children: \"getStaticProps\"\n      }), \"/\", /*#__PURE__*/_jsx(\"code\", {\n        children: \"getServerSideProps\"\n      }), \", a feature of the Sitecore JSS Next.js SDK. These are aggregated during the the Next.js page-level \", /*#__PURE__*/_jsx(\"code\", {\n        children: \"getStaticProps\"\n      }), \"/\", /*#__PURE__*/_jsx(\"code\", {\n        children: \"getServerSideProps\"\n      }), \" execution.\"]\n    }), data && data.datasource && /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"h4\", {\n        children: \"Datasource Item (via Connected GraphQL)\"\n      }), \"id: \", data.datasource.id, /*#__PURE__*/_jsx(\"br\", {}), \"name: \", data.datasource.name, /*#__PURE__*/_jsx(\"br\", {}), \"sample1: \", (_data$datasource$samp = data.datasource.sample1) === null || _data$datasource$samp === void 0 ? void 0 : _data$datasource$samp.value, /*#__PURE__*/_jsx(\"br\", {}), \"sample1 (editable): \", /*#__PURE__*/_jsx(Text, {\n        field: (_data$datasource$samp2 = data.datasource.sample1) === null || _data$datasource$samp2 === void 0 ? void 0 : _data$datasource$samp2.jsonValue\n      }), /*#__PURE__*/_jsx(\"br\", {}), \"sample2:\", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"ul\", {\n        children: [/*#__PURE__*/_jsxs(\"li\", {\n          children: [\"text: \", (_data$datasource$samp3 = data.datasource.sample2) === null || _data$datasource$samp3 === void 0 ? void 0 : _data$datasource$samp3.text]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [\"url: \", (_data$datasource$samp4 = data.datasource.sample2) === null || _data$datasource$samp4 === void 0 ? void 0 : _data$datasource$samp4.url]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [\"target: \", (_data$datasource$samp5 = data.datasource.sample2) === null || _data$datasource$samp5 === void 0 ? void 0 : _data$datasource$samp5.target]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [\"editable: \", /*#__PURE__*/_jsx(Link, {\n            field: (_data$datasource$samp6 = data.datasource.sample2) === null || _data$datasource$samp6 === void 0 ? void 0 : _data$datasource$samp6.jsonValue\n          })]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [\"field type: \", (_data$datasource$samp7 = data.datasource.sample2) === null || _data$datasource$samp7 === void 0 ? void 0 : (_data$datasource$samp8 = _data$datasource$samp7.definition) === null || _data$datasource$samp8 === void 0 ? void 0 : _data$datasource$samp8.type]\n        }), /*#__PURE__*/_jsxs(\"li\", {\n          children: [\"field is shared?: \", (_data$datasource$samp9 = data.datasource.sample2) === null || _data$datasource$samp9 === void 0 ? void 0 : (_data$datasource$samp10 = _data$datasource$samp9.definition) === null || _data$datasource$samp10 === void 0 ? void 0 : _data$datasource$samp10.shared.toString()]\n        })]\n      })]\n    }), data && data.contextItem && /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"h4\", {\n        children: \"Route Item (via Connected GraphQL)\"\n      }), \"id: \", data.contextItem.id, /*#__PURE__*/_jsx(\"br\", {}), \"page title: \", (_data$contextItem$pag = data.contextItem.pageTitle) === null || _data$contextItem$pag === void 0 ? void 0 : _data$contextItem$pag.value, /*#__PURE__*/_jsx(\"br\", {}), \"children:\", /*#__PURE__*/_jsx(\"ul\", {\n        children: data.contextItem.children.results.map(child => {\n          var _routeItem$pageTitle, _routeItem$pageTitle2;\n\n          const routeItem = child;\n          return /*#__PURE__*/_jsxs(\"li\", {\n            children: [/*#__PURE__*/_jsx(NextLink, {\n              href: routeItem.url.path,\n              children: (_routeItem$pageTitle = routeItem.pageTitle) === null || _routeItem$pageTitle === void 0 ? void 0 : _routeItem$pageTitle.value\n            }), \"(editable title too! \", /*#__PURE__*/_jsx(Text, {\n              field: (_routeItem$pageTitle2 = routeItem.pageTitle) === null || _routeItem$pageTitle2 === void 0 ? void 0 : _routeItem$pageTitle2.jsonValue\n            }), \")\"]\n          }, routeItem.id);\n        })\n      })]\n    })]\n  });\n};\n/**\r\n * Will be called during SSG\r\n * @param {ComponentRendering} rendering\r\n * @param {LayoutServiceData} layoutData\r\n * @param {GetStaticPropsContext} context\r\n */\n\n\nexport const getStaticProps = async (rendering, layoutData) => {\n  var _layoutData$sitecore, _layoutData$sitecore$, _layoutData$sitecore2, _layoutData$sitecore3;\n\n  if (process.env.JSS_MODE === JSS_MODE_DISCONNECTED) {\n    return null;\n  }\n\n  const graphQLClient = new GraphQLRequestClient(config.graphQLEndpoint, {\n    apiKey: config.sitecoreApiKey\n  });\n  const result = await graphQLClient.request(ConnectedDemoQueryDocument, {\n    datasource: rendering.dataSource,\n    contextItem: layoutData === null || layoutData === void 0 ? void 0 : (_layoutData$sitecore = layoutData.sitecore) === null || _layoutData$sitecore === void 0 ? void 0 : (_layoutData$sitecore$ = _layoutData$sitecore.route) === null || _layoutData$sitecore$ === void 0 ? void 0 : _layoutData$sitecore$.itemId,\n    language: layoutData === null || layoutData === void 0 ? void 0 : (_layoutData$sitecore2 = layoutData.sitecore) === null || _layoutData$sitecore2 === void 0 ? void 0 : (_layoutData$sitecore3 = _layoutData$sitecore2.context) === null || _layoutData$sitecore3 === void 0 ? void 0 : _layoutData$sitecore3.language\n  });\n  return result;\n};\n/**\r\n * Will be called during SSR\r\n * @param {ComponentRendering} rendering\r\n * @param {LayoutServiceData} layoutData\r\n * @param {GetServerSidePropsContext} context\r\n */\n\nexport const getServerSideProps = async (rendering, layoutData) => {\n  var _layoutData$sitecore4, _layoutData$sitecore5, _layoutData$sitecore6, _layoutData$sitecore7;\n\n  if (process.env.JSS_MODE === JSS_MODE_DISCONNECTED) {\n    return null;\n  }\n\n  const graphQLClient = new GraphQLRequestClient(config.graphQLEndpoint, {\n    apiKey: config.sitecoreApiKey\n  });\n  const result = await graphQLClient.request(ConnectedDemoQueryDocument, {\n    datasource: rendering.dataSource,\n    contextItem: layoutData === null || layoutData === void 0 ? void 0 : (_layoutData$sitecore4 = layoutData.sitecore) === null || _layoutData$sitecore4 === void 0 ? void 0 : (_layoutData$sitecore5 = _layoutData$sitecore4.route) === null || _layoutData$sitecore5 === void 0 ? void 0 : _layoutData$sitecore5.itemId,\n    language: layoutData === null || layoutData === void 0 ? void 0 : (_layoutData$sitecore6 = layoutData.sitecore) === null || _layoutData$sitecore6 === void 0 ? void 0 : (_layoutData$sitecore7 = _layoutData$sitecore6.context) === null || _layoutData$sitecore7 === void 0 ? void 0 : _layoutData$sitecore7.language\n  });\n  return result;\n};\nexport default GraphQLConnectedDemo;","map":null,"metadata":{},"sourceType":"module"}