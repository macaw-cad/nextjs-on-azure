{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useSitecoreContext } from '@sitecore-jss/sitecore-jss-nextjs';\nimport StyleguideSpecimen from './Styleguide-Specimen';\n\n/**\r\n * Demonstrates gaining access to the route-level Sitecore Context from\r\n * within other components.\r\n */\nconst StyleguideSitecoreContext = props => {\n  const {\n    sitecoreContext\n  } = useSitecoreContext();\n  return /*#__PURE__*/_jsxs(StyleguideSpecimen, _objectSpread(_objectSpread({}, props), {}, {\n    e2eId: \"styleguide-sitecore-context\",\n    children: [/*#__PURE__*/_jsx(\"p\", {\n      children: \"The current Sitecore Context is...\"\n    }), /*#__PURE__*/_jsx(\"pre\", {\n      style: {\n        maxHeight: '400px',\n        overflow: 'scroll'\n      },\n      children: JSON.stringify(sitecoreContext, null, 2)\n    })]\n  }));\n};\n\nexport default StyleguideSitecoreContext;","map":null,"metadata":{},"sourceType":"module"}