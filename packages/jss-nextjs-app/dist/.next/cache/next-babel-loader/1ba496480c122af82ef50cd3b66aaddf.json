{"ast":null,"code":"import _classCallCheck from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withSitecoreContext } from '@sitecore-jss/sitecore-jss-nextjs';\nimport { trackingApi } from '@sitecore-jss/sitecore-jss-tracking';\nimport { dataFetcher } from 'lib/data-fetcher';\nimport config from 'temp/config';\nimport StyleguideSpecimen from './Styleguide-Specimen';\n\n/**\r\n * Demonstrates analytics tracking patterns (xDB)\r\n */\nvar StyleguideTracking = /*#__PURE__*/function (_React$Component) {\n  _inherits(StyleguideTracking, _React$Component);\n\n  var _super = _createSuper(StyleguideTracking);\n\n  function StyleguideTracking(props) {\n    var _this;\n\n    _classCallCheck(this, StyleguideTracking);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"event\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"goal\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"outcomeName\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"outcomeValue\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"campaign\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"pageId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"pageUrl\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"trackingApiOptions\", void 0);\n\n    _this.event = /*#__PURE__*/React.createRef();\n    _this.goal = /*#__PURE__*/React.createRef();\n    _this.outcomeName = /*#__PURE__*/React.createRef();\n    _this.outcomeValue = /*#__PURE__*/React.createRef();\n    _this.campaign = /*#__PURE__*/React.createRef();\n    _this.pageId = /*#__PURE__*/React.createRef();\n    _this.pageUrl = /*#__PURE__*/React.createRef();\n    console.error(\"config\", JSON.stringify(config));\n    _this.trackingApiOptions = {\n      host: config.sitecoreApiHost,\n      querystringParams: {\n        sc_apikey: config.sitecoreApiKey\n      },\n      fetcher: dataFetcher\n    };\n    return _this;\n  }\n\n  _createClass(StyleguideTracking, [{\n    key: \"submitEvent\",\n    value: function submitEvent() {\n      if (!this.event.current) return;\n      trackingApi.trackEvent([{\n        eventId: this.event.current.value\n      }], this.trackingApiOptions).then(function () {\n        return alert('Page event pushed');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"submitGoal\",\n    value: function submitGoal() {\n      if (!this.goal.current) return;\n      trackingApi.trackEvent([{\n        goalId: this.goal.current.value\n      }], this.trackingApiOptions).then(function () {\n        return alert('Goal pushed');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"submitOutcome\",\n    value: function submitOutcome() {\n      if (!this.pageUrl.current || !this.pageId.current || !this.outcomeName.current || !this.outcomeValue.current) {\n        return;\n      }\n\n      trackingApi.trackEvent([{\n        url: this.pageUrl.current.value,\n        pageId: this.pageId.current.value,\n        outcomeId: this.outcomeName.current.value,\n        currencyCode: 'USD',\n        monetaryValue: this.outcomeValue.current.value\n      }], this.trackingApiOptions).then(function () {\n        return alert('Outcome pushed');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"triggerCampaign\",\n    value: function triggerCampaign() {\n      if (!this.campaign.current) return;\n      trackingApi.trackEvent([{\n        campaignId: this.campaign.current.value\n      }], this.trackingApiOptions).then(function () {\n        return alert('Campaign set');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"submitPageView\",\n    value: function submitPageView() {\n      if (!this.pageId.current || !this.pageUrl.current) return;\n      trackingApi.trackEvent([{\n        pageId: this.pageId.current.value,\n        url: this.pageUrl.current.value\n      }], this.trackingApiOptions).then(function () {\n        return alert('Page view pushed');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"abandonSession\",\n    value: function abandonSession() {\n      var abandonOptions = _objectSpread({\n        action: 'flush'\n      }, this.trackingApiOptions);\n\n      trackingApi.trackEvent([], abandonOptions).then(function () {\n        return alert('Interaction has been terminated and its data pushed to xConnect.');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"submitBatching\",\n    value: function submitBatching() {\n      trackingApi.trackEvent([{\n        eventId: 'Download'\n      }, {\n        goalId: 'Instant Demo'\n      }, {\n        outcomeId: 'Opportunity'\n      }, {\n        pageId: '{110D559F-DEA5-42EA-9C1C-8A5DF7E70EF9}',\n        url: '/arbitrary/url/you/own'\n      }, // this goal will be added to the new page/route ID set above, not the current route\n      {\n        goalId: 'Register'\n      }], this.trackingApiOptions).then(function () {\n        return alert('Batch of events pushed');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disconnectedMode = this.props.sitecoreContext.itemId === 'available-in-connected-mode';\n      return /*#__PURE__*/_jsxs(StyleguideSpecimen, _objectSpread(_objectSpread({}, this.props), {}, {\n        e2eId: \"styleguide-tracking\",\n        children: [disconnectedMode && /*#__PURE__*/_jsx(\"p\", {\n          children: \"The tracking API is only available in connected, integrated, or headless modes.\"\n        }), !disconnectedMode && /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsxs(\"p\", {\n            className: \"alert alert-warning\",\n            children: [\"Note: The JSS tracker API is disabled by default. Consult the\", ' ', /*#__PURE__*/_jsx(\"a\", {\n              href: \"https://jss.sitecore.com/docs/fundamentals/services/tracking\",\n              children: \"tracking documentation\"\n            }), ' ', \"to enable it.\"]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxs(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsx(\"legend\", {\n                children: \"Event\"\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"Events are defined in \", /*#__PURE__*/_jsx(\"code\", {\n                  children: \"/sitecore/system/Settings/Analytics/Page Events\"\n                })]\n              }), /*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"event\",\n                children: \"Event GUID or Name\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                id: \"event\",\n                className: \"form-control\",\n                ref: this.event\n              }), /*#__PURE__*/_jsx(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary mt-3\",\n                onClick: this.submitEvent.bind(this),\n                children: \"Submit\"\n              })]\n            }), /*#__PURE__*/_jsxs(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsx(\"legend\", {\n                children: \"Goal\"\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"Goals are defined in \", /*#__PURE__*/_jsx(\"code\", {\n                  children: \"/sitecore/system/Marketing Control Panel/Goals\"\n                })]\n              }), /*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"goal\",\n                children: \"Goal GUID or Name\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"goal\",\n                ref: this.goal,\n                placeholder: \"i.e. Register\"\n              }), /*#__PURE__*/_jsx(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary mt-3\",\n                onClick: this.submitGoal.bind(this),\n                children: \"Submit\"\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxs(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsx(\"legend\", {\n                children: \"Outcome\"\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"Outcomes are defined in\", ' ', /*#__PURE__*/_jsx(\"code\", {\n                  children: \"/sitecore/system/Marketing Control Panel/Outcomes\"\n                })]\n              }), /*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"outcomeName\",\n                children: \"Outcome GUID or Name\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"outcomeName\",\n                ref: this.outcomeName,\n                placeholder: \"i.e. Marketing Lead\"\n              }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"outcomeValue\",\n                children: \"Monetary Value (optional)\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"number\",\n                className: \"form-control\",\n                id: \"outcomeValue\",\n                ref: this.outcomeValue,\n                placeholder: \"i.e. 1337.00\"\n              }), /*#__PURE__*/_jsx(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary mt-3\",\n                onClick: this.submitOutcome.bind(this),\n                children: \"Submit\"\n              })]\n            }), /*#__PURE__*/_jsxs(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsx(\"legend\", {\n                children: \"Campaign\"\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"Campaigns are defined in\", ' ', /*#__PURE__*/_jsx(\"code\", {\n                  children: \"/sitecore/system/Marketing Control Panel/Campaigns\"\n                })]\n              }), /*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"campaign\",\n                children: \"Campaign GUID or Name\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"campaign\",\n                ref: this.campaign\n              }), /*#__PURE__*/_jsx(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary mt-3\",\n                onClick: this.triggerCampaign.bind(this),\n                children: \"Submit\"\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxs(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsx(\"legend\", {\n                children: \"Page View\"\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"Track arbitrary page views for custom routing or offline use. Note that Layout Service tracks page views by default unless \", /*#__PURE__*/_jsx(\"code\", {\n                  children: \"tracking=false\"\n                }), \" is passed in its query string.\"]\n              }), /*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"pageId\",\n                children: \"Page Item GUID\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"pageId\",\n                ref: this.pageId,\n                placeholder: \"i.e. {11111111-1111-1111-1111-111111111111}\"\n              }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"label\", {\n                htmlFor: \"pageUrl\",\n                children: \"Page URL\"\n              }), /*#__PURE__*/_jsx(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"pageUrl\",\n                ref: this.pageUrl,\n                placeholder: \"i.e. /foo/bar\"\n              }), /*#__PURE__*/_jsx(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary mt-3\",\n                onClick: this.submitPageView.bind(this),\n                children: \"Submit\"\n              })]\n            }), /*#__PURE__*/_jsxs(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsx(\"legend\", {\n                children: \"Batching\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                children: \"The tracking API supports pushing a whole batch of events in a single request. This can be useful for queuing strategies or offline PWA usage.\"\n              }), /*#__PURE__*/_jsx(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: this.submitBatching.bind(this),\n                children: \"Submit Batch of Events\"\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxs(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsx(\"legend\", {\n                children: \"Interaction Control\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                children: \"Tracking data is not pushed into the xConnect service until your session ends on the Sitecore server. Click this button to instantly end your session and flush the data - great for debugging and testing.\"\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                className: \"alert alert-warning\",\n                children: [\"Note: By default \", /*#__PURE__*/_jsx(\"em\", {\n                  children: \"anonymous\"\n                }), \" contacts will not be shown in Experience Profile. If your interactions are not showing up in Experience Profile, you may need to\", ' ', /*#__PURE__*/_jsx(\"a\", {\n                  href: \"https://doc.sitecore.net/developers/xp/xconnect/xconnect-search-indexer/enable-anonymous-contact-indexing.html\",\n                  children: \"enable anonymous contact indexing.\"\n                })]\n              }), /*#__PURE__*/_jsx(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: this.abandonSession.bind(this),\n                children: \"End Interaction\"\n              })]\n            })\n          })]\n        })]\n      }));\n    }\n  }]);\n\n  return StyleguideTracking;\n}(React.Component);\n\nexport default withSitecoreContext()(StyleguideTracking);","map":null,"metadata":{},"sourceType":"module"}