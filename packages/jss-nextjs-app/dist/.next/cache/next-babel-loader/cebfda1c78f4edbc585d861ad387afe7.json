{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\jss\\\\nextjsonazure\\\\packages\\\\jss-nextjs-app\\\\src\\\\pages\\\\_error.tsx\",\n    _this = this;\n\nimport Head from 'next/head';\n\n/**\r\n * Rendered in case if we have 500 error, used only in Production mode\r\n * @link https://nextjs.org/docs/advanced-features/custom-error-page#customizing-the-error-page\r\n */\nvar ErrorPage = function ErrorPage(_ref) {\n  var statusCode = _ref.statusCode;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: statusCode ? \"An error \".concat(statusCode, \" occurred on server\") : 'An error occurred on client'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: \"Go to the Home page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = ErrorPage;\n\nErrorPage.getInitialProps = function (_ref2) {\n  var res = _ref2.res,\n      err = _ref2.err;\n  var statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n  return {\n    statusCode: statusCode\n  };\n};\n\nexport default ErrorPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorPage\");","map":{"version":3,"sources":["D:/projects/jss/nextjsonazure/packages/jss-nextjs-app/src/pages/_error.tsx"],"names":["Head","ErrorPage","statusCode","padding","getInitialProps","res","err"],"mappings":";;;;;;AACA,OAAOA,IAAP,MAAiB,WAAjB;;AAMA;AACA;AACA;AACA;AACA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,sBAC1C;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,8BACE;AAAA,kBACGD,UAAU,sBAAeA,UAAf,2BAAiD;AAD9D;AAAA;AAAA;AAAA;AAAA,eADF,eAIE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA,kBAD0C;AAAA,CAA5C;;KAAMD,S;;AAcNA,SAAS,CAACG,eAAV,GAA4B,iBAAkB;AAAA,MAAfC,GAAe,SAAfA,GAAe;AAAA,MAAVC,GAAU,SAAVA,GAAU;AAC5C,MAAMJ,UAAU,GAAGG,GAAG,GAAGA,GAAG,CAACH,UAAP,GAAoBI,GAAG,GAAGA,GAAG,CAACJ,UAAP,GAAoB,GAAjE;AAEA,SAAO;AAAEA,IAAAA,UAAU,EAAVA;AAAF,GAAP;AACD,CAJD;;AAMA,eAAeD,SAAf","sourcesContent":["import { NextPage } from 'next';\r\nimport Head from 'next/head';\r\n\r\ninterface ErrorPageProps {\r\n  statusCode?: number | null | undefined;\r\n}\r\n\r\n/**\r\n * Rendered in case if we have 500 error, used only in Production mode\r\n * @link https://nextjs.org/docs/advanced-features/custom-error-page#customizing-the-error-page\r\n */\r\nconst ErrorPage: NextPage<ErrorPageProps> = ({ statusCode }) => (\r\n  <>\r\n    <Head>\r\n      <title>Error</title>\r\n    </Head>\r\n    <div style={{ padding: 10 }}>\r\n      <p>\r\n        {statusCode ? `An error ${statusCode} occurred on server` : 'An error occurred on client'}\r\n      </p>\r\n      <a href=\"/\">Go to the Home page</a>\r\n    </div>\r\n  </>\r\n);\r\n\r\nErrorPage.getInitialProps = ({ res, err }) => {\r\n  const statusCode = res ? res.statusCode : err ? err.statusCode : 404;\r\n\r\n  return { statusCode };\r\n};\r\n\r\nexport default ErrorPage;\r\n"]},"metadata":{},"sourceType":"module"}