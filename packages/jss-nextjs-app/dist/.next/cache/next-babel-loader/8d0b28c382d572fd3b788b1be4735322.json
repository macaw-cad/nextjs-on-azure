{"ast":null,"code":"import _classCallCheck from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\jss\\\\nextjsonazure\\\\packages\\\\jss-nextjs-app-new\\\\src\\\\components\\\\styleguide\\\\Styleguide-Tracking.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withSitecoreContext } from '@sitecore-jss/sitecore-jss-nextjs';\nimport { trackingApi } from '@sitecore-jss/sitecore-jss-tracking';\nimport { dataFetcher } from 'lib/data-fetcher';\nimport config from 'temp/config';\nimport StyleguideSpecimen from './Styleguide-Specimen';\n\n/**\r\n * Demonstrates analytics tracking patterns (xDB)\r\n */\nvar StyleguideTracking = /*#__PURE__*/function (_React$Component) {\n  _inherits(StyleguideTracking, _React$Component);\n\n  var _super = _createSuper(StyleguideTracking);\n\n  function StyleguideTracking(props) {\n    var _this;\n\n    _classCallCheck(this, StyleguideTracking);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"event\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"goal\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"outcomeName\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"outcomeValue\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"campaign\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"pageId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"pageUrl\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"trackingApiOptions\", void 0);\n\n    _this.event = /*#__PURE__*/React.createRef();\n    _this.goal = /*#__PURE__*/React.createRef();\n    _this.outcomeName = /*#__PURE__*/React.createRef();\n    _this.outcomeValue = /*#__PURE__*/React.createRef();\n    _this.campaign = /*#__PURE__*/React.createRef();\n    _this.pageId = /*#__PURE__*/React.createRef();\n    _this.pageUrl = /*#__PURE__*/React.createRef();\n    console.error(\"config\", JSON.stringify(config));\n    _this.trackingApiOptions = {\n      host: config.sitecoreApiHost,\n      querystringParams: {\n        sc_apikey: config.sitecoreApiKey\n      },\n      fetcher: dataFetcher\n    };\n    return _this;\n  }\n\n  _createClass(StyleguideTracking, [{\n    key: \"submitEvent\",\n    value: function submitEvent() {\n      if (!this.event.current) return;\n      trackingApi.trackEvent([{\n        eventId: this.event.current.value\n      }], this.trackingApiOptions).then(function () {\n        return alert('Page event pushed');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"submitGoal\",\n    value: function submitGoal() {\n      if (!this.goal.current) return;\n      trackingApi.trackEvent([{\n        goalId: this.goal.current.value\n      }], this.trackingApiOptions).then(function () {\n        return alert('Goal pushed');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"submitOutcome\",\n    value: function submitOutcome() {\n      if (!this.pageUrl.current || !this.pageId.current || !this.outcomeName.current || !this.outcomeValue.current) {\n        return;\n      }\n\n      trackingApi.trackEvent([{\n        url: this.pageUrl.current.value,\n        pageId: this.pageId.current.value,\n        outcomeId: this.outcomeName.current.value,\n        currencyCode: 'USD',\n        monetaryValue: this.outcomeValue.current.value\n      }], this.trackingApiOptions).then(function () {\n        return alert('Outcome pushed');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"triggerCampaign\",\n    value: function triggerCampaign() {\n      if (!this.campaign.current) return;\n      trackingApi.trackEvent([{\n        campaignId: this.campaign.current.value\n      }], this.trackingApiOptions).then(function () {\n        return alert('Campaign set');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"submitPageView\",\n    value: function submitPageView() {\n      if (!this.pageId.current || !this.pageUrl.current) return;\n      trackingApi.trackEvent([{\n        pageId: this.pageId.current.value,\n        url: this.pageUrl.current.value\n      }], this.trackingApiOptions).then(function () {\n        return alert('Page view pushed');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"abandonSession\",\n    value: function abandonSession() {\n      var abandonOptions = _objectSpread({\n        action: 'flush'\n      }, this.trackingApiOptions);\n\n      trackingApi.trackEvent([], abandonOptions).then(function () {\n        return alert('Interaction has been terminated and its data pushed to xConnect.');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"submitBatching\",\n    value: function submitBatching() {\n      trackingApi.trackEvent([{\n        eventId: 'Download'\n      }, {\n        goalId: 'Instant Demo'\n      }, {\n        outcomeId: 'Opportunity'\n      }, {\n        pageId: '{110D559F-DEA5-42EA-9C1C-8A5DF7E70EF9}',\n        url: '/arbitrary/url/you/own'\n      }, // this goal will be added to the new page/route ID set above, not the current route\n      {\n        goalId: 'Register'\n      }], this.trackingApiOptions).then(function () {\n        return alert('Batch of events pushed');\n      })[\"catch\"](function (error) {\n        return alert(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disconnectedMode = this.props.sitecoreContext.itemId === 'available-in-connected-mode';\n      return /*#__PURE__*/_jsxDEV(StyleguideSpecimen, _objectSpread(_objectSpread({}, this.props), {}, {\n        e2eId: \"styleguide-tracking\",\n        children: [disconnectedMode && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The tracking API is only available in connected, integrated, or headless modes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), !disconnectedMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alert alert-warning\",\n            children: [\"Note: The JSS tracker API is disabled by default. Consult the\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://jss.sitecore.com/docs/fundamentals/services/tracking\",\n              children: \"tracking documentation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), ' ', \"to enable it.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Events are defined in \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"/sitecore/system/Settings/Analytics/Page Events\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"event\",\n                children: \"Event GUID or Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"event\",\n                className: \"form-control\",\n                ref: this.event\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary mt-3\",\n                onClick: this.submitEvent.bind(this),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Goal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Goals are defined in \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"/sitecore/system/Marketing Control Panel/Goals\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"goal\",\n                children: \"Goal GUID or Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"goal\",\n                ref: this.goal,\n                placeholder: \"i.e. Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary mt-3\",\n                onClick: this.submitGoal.bind(this),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Outcome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Outcomes are defined in\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"/sitecore/system/Marketing Control Panel/Outcomes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"outcomeName\",\n                children: \"Outcome GUID or Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"outcomeName\",\n                ref: this.outcomeName,\n                placeholder: \"i.e. Marketing Lead\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"outcomeValue\",\n                children: \"Monetary Value (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"form-control\",\n                id: \"outcomeValue\",\n                ref: this.outcomeValue,\n                placeholder: \"i.e. 1337.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary mt-3\",\n                onClick: this.submitOutcome.bind(this),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Campaign\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Campaigns are defined in\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"/sitecore/system/Marketing Control Panel/Campaigns\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"campaign\",\n                children: \"Campaign GUID or Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"campaign\",\n                ref: this.campaign\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary mt-3\",\n                onClick: this.triggerCampaign.bind(this),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Page View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Track arbitrary page views for custom routing or offline use. Note that Layout Service tracks page views by default unless \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"tracking=false\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 63\n                }, this), \" is passed in its query string.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"pageId\",\n                children: \"Page Item GUID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"pageId\",\n                ref: this.pageId,\n                placeholder: \"i.e. {11111111-1111-1111-1111-111111111111}\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"pageUrl\",\n                children: \"Page URL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"pageUrl\",\n                ref: this.pageUrl,\n                placeholder: \"i.e. /foo/bar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary mt-3\",\n                onClick: this.submitPageView.bind(this),\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Batching\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"The tracking API supports pushing a whole batch of events in a single request. This can be useful for queuing strategies or offline PWA usage.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: this.submitBatching.bind(this),\n                children: \"Submit Batch of Events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group col-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Interaction Control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Tracking data is not pushed into the xConnect service until your session ends on the Sitecore server. Click this button to instantly end your session and flush the data - great for debugging and testing.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"alert alert-warning\",\n                children: [\"Note: By default \", /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"anonymous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 36\n                }, this), \" contacts will not be shown in Experience Profile. If your interactions are not showing up in Experience Profile, you may need to\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"https://doc.sitecore.net/developers/xp/xconnect/xconnect-search-indexer/enable-anonymous-contact-indexing.html\",\n                  children: \"enable anonymous contact indexing.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: this.abandonSession.bind(this),\n                children: \"End Interaction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return StyleguideTracking;\n}(React.Component);\n\nexport default withSitecoreContext()(StyleguideTracking);","map":{"version":3,"sources":["D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/src/components/styleguide/Styleguide-Tracking.tsx"],"names":["React","withSitecoreContext","trackingApi","dataFetcher","config","StyleguideSpecimen","StyleguideTracking","props","event","createRef","goal","outcomeName","outcomeValue","campaign","pageId","pageUrl","console","error","JSON","stringify","trackingApiOptions","host","sitecoreApiHost","querystringParams","sc_apikey","sitecoreApiKey","fetcher","current","trackEvent","eventId","value","then","alert","goalId","url","outcomeId","currencyCode","monetaryValue","campaignId","abandonOptions","action","disconnectedMode","sitecoreContext","itemId","submitEvent","bind","submitGoal","submitOutcome","triggerCampaign","submitPageView","submitBatching","abandonSession","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,mCAApC;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;;AAQA;AACA;AACA;IACMC,kB;;;;;AAWJ,8BAAYC,KAAZ,EAA4C;AAAA;;AAAA;;AAC1C,8BAAMA,KAAN;;AAD0C;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAG1C,UAAKC,KAAL,gBAAaR,KAAK,CAACS,SAAN,EAAb;AACA,UAAKC,IAAL,gBAAYV,KAAK,CAACS,SAAN,EAAZ;AACA,UAAKE,WAAL,gBAAmBX,KAAK,CAACS,SAAN,EAAnB;AACA,UAAKG,YAAL,gBAAoBZ,KAAK,CAACS,SAAN,EAApB;AACA,UAAKI,QAAL,gBAAgBb,KAAK,CAACS,SAAN,EAAhB;AACA,UAAKK,MAAL,gBAAcd,KAAK,CAACS,SAAN,EAAd;AACA,UAAKM,OAAL,gBAAef,KAAK,CAACS,SAAN,EAAf;AAEAO,IAAAA,OAAO,CAACC,KAAR,CAAc,QAAd,EAAwBC,IAAI,CAACC,SAAL,CAAef,MAAf,CAAxB;AAEA,UAAKgB,kBAAL,GAA0B;AACxBC,MAAAA,IAAI,EAAEjB,MAAM,CAACkB,eADW;AAExBC,MAAAA,iBAAiB,EAAE;AAGjBC,QAAAA,SAAS,EAAEpB,MAAM,CAACqB;AAHD,OAFK;AAOxBC,MAAAA,OAAO,EAAEvB;AAPe,KAA1B;AAb0C;AAsB3C;;;;kCAEa;AACZ,UAAI,CAAC,KAAKK,KAAL,CAAWmB,OAAhB,EAAyB;AAEzBzB,MAAAA,WAAW,CACR0B,UADH,CACc,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWmB,OAAX,CAAmBG;AAA9B,OAAD,CADd,EACuD,KAAKV,kBAD5D,EAEGW,IAFH,CAEQ;AAAA,eAAMC,KAAK,CAAC,mBAAD,CAAX;AAAA,OAFR,WAGS,UAACf,KAAD;AAAA,eAAWe,KAAK,CAACf,KAAD,CAAhB;AAAA,OAHT;AAID;;;iCAEY;AACX,UAAI,CAAC,KAAKP,IAAL,CAAUiB,OAAf,EAAwB;AAExBzB,MAAAA,WAAW,CACR0B,UADH,CACc,CAAC;AAAEK,QAAAA,MAAM,EAAE,KAAKvB,IAAL,CAAUiB,OAAV,CAAkBG;AAA5B,OAAD,CADd,EACqD,KAAKV,kBAD1D,EAEGW,IAFH,CAEQ;AAAA,eAAMC,KAAK,CAAC,aAAD,CAAX;AAAA,OAFR,WAGS,UAACf,KAAD;AAAA,eAAWe,KAAK,CAACf,KAAD,CAAhB;AAAA,OAHT;AAID;;;oCAEe;AACd,UACE,CAAC,KAAKF,OAAL,CAAaY,OAAd,IACA,CAAC,KAAKb,MAAL,CAAYa,OADb,IAEA,CAAC,KAAKhB,WAAL,CAAiBgB,OAFlB,IAGA,CAAC,KAAKf,YAAL,CAAkBe,OAJrB,EAKE;AACA;AACD;;AAEDzB,MAAAA,WAAW,CACR0B,UADH,CAEI,CACE;AACEM,QAAAA,GAAG,EAAE,KAAKnB,OAAL,CAAaY,OAAb,CAAqBG,KAD5B;AAEEhB,QAAAA,MAAM,EAAE,KAAKA,MAAL,CAAYa,OAAZ,CAAoBG,KAF9B;AAGEK,QAAAA,SAAS,EAAE,KAAKxB,WAAL,CAAiBgB,OAAjB,CAAyBG,KAHtC;AAIEM,QAAAA,YAAY,EAAE,KAJhB;AAKEC,QAAAA,aAAa,EAAE,KAAKzB,YAAL,CAAkBe,OAAlB,CAA0BG;AAL3C,OADF,CAFJ,EAWI,KAAKV,kBAXT,EAaGW,IAbH,CAaQ;AAAA,eAAMC,KAAK,CAAC,gBAAD,CAAX;AAAA,OAbR,WAcS,UAACf,KAAD;AAAA,eAAWe,KAAK,CAACf,KAAD,CAAhB;AAAA,OAdT;AAeD;;;sCAEiB;AAChB,UAAI,CAAC,KAAKJ,QAAL,CAAcc,OAAnB,EAA4B;AAE5BzB,MAAAA,WAAW,CACR0B,UADH,CACc,CAAC;AAAEU,QAAAA,UAAU,EAAE,KAAKzB,QAAL,CAAcc,OAAd,CAAsBG;AAApC,OAAD,CADd,EAC6D,KAAKV,kBADlE,EAEGW,IAFH,CAEQ;AAAA,eAAMC,KAAK,CAAC,cAAD,CAAX;AAAA,OAFR,WAGS,UAACf,KAAD;AAAA,eAAWe,KAAK,CAACf,KAAD,CAAhB;AAAA,OAHT;AAID;;;qCAEgB;AACf,UAAI,CAAC,KAAKH,MAAL,CAAYa,OAAb,IAAwB,CAAC,KAAKZ,OAAL,CAAaY,OAA1C,EAAmD;AAEnDzB,MAAAA,WAAW,CACR0B,UADH,CAEI,CACE;AACEd,QAAAA,MAAM,EAAE,KAAKA,MAAL,CAAYa,OAAZ,CAAoBG,KAD9B;AAEEI,QAAAA,GAAG,EAAE,KAAKnB,OAAL,CAAaY,OAAb,CAAqBG;AAF5B,OADF,CAFJ,EAQI,KAAKV,kBART,EAUGW,IAVH,CAUQ;AAAA,eAAMC,KAAK,CAAC,kBAAD,CAAX;AAAA,OAVR,WAWS,UAACf,KAAD;AAAA,eAAWe,KAAK,CAACf,KAAD,CAAhB;AAAA,OAXT;AAYD;;;qCAEgB;AACf,UAAMsB,cAAc;AAClBC,QAAAA,MAAM,EAAE;AADU,SAEf,KAAKpB,kBAFU,CAApB;;AAKAlB,MAAAA,WAAW,CACR0B,UADH,CACc,EADd,EACkBW,cADlB,EAEGR,IAFH,CAEQ;AAAA,eAAMC,KAAK,CAAC,kEAAD,CAAX;AAAA,OAFR,WAGS,UAACf,KAAD;AAAA,eAAWe,KAAK,CAACf,KAAD,CAAhB;AAAA,OAHT;AAID;;;qCAEgB;AACff,MAAAA,WAAW,CACR0B,UADH,CAEI,CACE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADF,EAEE;AAAEI,QAAAA,MAAM,EAAE;AAAV,OAFF,EAGE;AAAEE,QAAAA,SAAS,EAAE;AAAb,OAHF,EAIE;AACErB,QAAAA,MAAM,EAAE,wCADV;AAEEoB,QAAAA,GAAG,EAAE;AAFP,OAJF,EAQE;AACA;AAAED,QAAAA,MAAM,EAAE;AAAV,OATF,CAFJ,EAaI,KAAKb,kBAbT,EAeGW,IAfH,CAeQ;AAAA,eAAMC,KAAK,CAAC,wBAAD,CAAX;AAAA,OAfR,WAgBS,UAACf,KAAD;AAAA,eAAWe,KAAK,CAACf,KAAD,CAAhB;AAAA,OAhBT;AAiBD;;;6BAEQ;AACP,UAAMwB,gBAAgB,GAAG,KAAKlC,KAAL,CAAWmC,eAAX,CAA2BC,MAA3B,KAAsC,6BAA/D;AAEA,0BACE,QAAC,kBAAD,kCAAwB,KAAKpC,KAA7B;AAAoC,QAAA,KAAK,EAAC,qBAA1C;AAAA,mBACGkC,gBAAgB,iBACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAIG,CAACA,gBAAD,iBACC;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,qBAAb;AAAA,wFACgE,GADhE,eAEE;AAAG,cAAA,IAAI,EAAC,8DAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAIO,GAJP;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACE;AAAU,cAAA,SAAS,EAAC,mBAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,kEACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADxB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAKE;AAAO,gBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,EAAE,EAAC,OAAtB;AAA8B,gBAAA,SAAS,EAAC,cAAxC;AAAuD,gBAAA,GAAG,EAAE,KAAKjC;AAAjE;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,SAAS,EAAC,sBAFZ;AAGE,gBAAA,OAAO,EAAE,KAAKoC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAiBE;AAAU,cAAA,SAAS,EAAC,mBAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,iEACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADvB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAKE;AAAO,gBAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,SAAS,EAAC,cAFZ;AAGE,gBAAA,EAAE,EAAC,MAHL;AAIE,gBAAA,GAAG,EAAE,KAAKnC,IAJZ;AAKE,gBAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,sBANF,eAaE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,SAAS,EAAC,sBAFZ;AAGE,gBAAA,OAAO,EAAE,KAAKoC,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eA+CE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACE;AAAU,cAAA,SAAS,EAAC,mBAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,sDAC0B,GAD1B,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAME;AAAO,gBAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,SAAS,EAAC,cAFZ;AAGE,gBAAA,EAAE,EAAC,aAHL;AAIE,gBAAA,GAAG,EAAE,KAAKlC,WAJZ;AAKE,gBAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,sBAPF,eAcE;AAAA;AAAA;AAAA;AAAA,sBAdF,eAeE;AAAO,gBAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfF,eAgBE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,SAAS,EAAC,cAFZ;AAGE,gBAAA,EAAE,EAAC,cAHL;AAIE,gBAAA,GAAG,EAAE,KAAKC,YAJZ;AAKE,gBAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,sBAhBF,eAuBE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,SAAS,EAAC,sBAFZ;AAGE,gBAAA,OAAO,EAAE,KAAKmC,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAiCE;AAAU,cAAA,SAAS,EAAC,mBAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,uDAC2B,GAD3B,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAME;AAAO,gBAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,SAAS,EAAC,cAA7B;AAA4C,gBAAA,EAAE,EAAC,UAA/C;AAA0D,gBAAA,GAAG,EAAE,KAAKhC;AAApE;AAAA;AAAA;AAAA;AAAA,sBAPF,eAQE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,SAAS,EAAC,sBAFZ;AAGE,gBAAA,OAAO,EAAE,KAAKmC,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/CF,eAiGE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACE;AAAU,cAAA,SAAS,EAAC,mBAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,uKAE8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAF9C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAOE;AAAO,gBAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAQE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,SAAS,EAAC,cAFZ;AAGE,gBAAA,EAAE,EAAC,QAHL;AAIE,gBAAA,GAAG,EAAE,KAAK/B,MAJZ;AAKE,gBAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,sBARF,eAeE;AAAA;AAAA;AAAA;AAAA,sBAfF,eAgBE;AAAO,gBAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBF,eAiBE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,SAAS,EAAC,cAFZ;AAGE,gBAAA,EAAE,EAAC,SAHL;AAIE,gBAAA,GAAG,EAAE,KAAKC,OAJZ;AAKE,gBAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,sBAjBF,eAwBE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,SAAS,EAAC,sBAFZ;AAGE,gBAAA,OAAO,EAAE,KAAKkC,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAkCE;AAAU,cAAA,SAAS,EAAC,mBAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAME;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,SAAS,EAAC,iBAFZ;AAGE,gBAAA,OAAO,EAAE,KAAKK,cAAL,CAAoBL,IAApB,CAAyB,IAAzB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjGF,eAkJE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACE;AAAU,cAAA,SAAS,EAAC,mBAApB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAOE;AAAG,gBAAA,SAAS,EAAC,qBAAb;AAAA,6DACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADnB,uIAGU,GAHV,eAIE;AAAG,kBAAA,IAAI,EAAC,gHAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAeE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,SAAS,EAAC,iBAFZ;AAGE,gBAAA,OAAO,EAAE,KAAKM,cAAL,CAAoBN,IAApB,CAAyB,IAAzB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAlJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAqLD;;;;EAlU8B7C,KAAK,CAACoD,S;;AAqUvC,eAAenD,mBAAmB,GAAGK,kBAAH,CAAlC","sourcesContent":["import React, { RefObject } from 'react';\r\nimport { withSitecoreContext } from '@sitecore-jss/sitecore-jss-nextjs';\r\nimport { trackingApi } from '@sitecore-jss/sitecore-jss-tracking';\r\nimport { dataFetcher } from 'lib/data-fetcher';\r\nimport config from 'temp/config';\r\nimport StyleguideSpecimen from './Styleguide-Specimen';\r\nimport { TrackingRequestOptions } from '@sitecore-jss/sitecore-jss-tracking/types/trackingRequestOptions';\r\nimport { StyleguideComponentWithContextProps, StyleguideSpecimenFields } from 'lib/component-props';\r\n\r\n/* eslint-disable no-alert,no-undef */\r\n\r\ntype StyleguideTrackingProps = StyleguideComponentWithContextProps & StyleguideSpecimenFields;\r\n\r\n/**\r\n * Demonstrates analytics tracking patterns (xDB)\r\n */\r\nclass StyleguideTracking extends React.Component<StyleguideTrackingProps> {\r\n  private event: RefObject<HTMLInputElement>;\r\n  private goal: RefObject<HTMLInputElement>;\r\n  private outcomeName: RefObject<HTMLInputElement>;\r\n  private outcomeValue: RefObject<HTMLInputElement>;\r\n  private campaign: RefObject<HTMLInputElement>;\r\n  private pageId: RefObject<HTMLInputElement>;\r\n  private pageUrl: RefObject<HTMLInputElement>;\r\n\r\n  private trackingApiOptions: TrackingRequestOptions;\r\n\r\n  constructor(props: StyleguideTrackingProps) {\r\n    super(props);\r\n\r\n    this.event = React.createRef();\r\n    this.goal = React.createRef();\r\n    this.outcomeName = React.createRef();\r\n    this.outcomeValue = React.createRef();\r\n    this.campaign = React.createRef();\r\n    this.pageId = React.createRef();\r\n    this.pageUrl = React.createRef();\r\n\r\n    console.error(\"config\", JSON.stringify(config));\r\n\r\n    this.trackingApiOptions = {\r\n      host: config.sitecoreApiHost,\r\n      querystringParams: {\r\n      \r\n\r\n        sc_apikey: config.sitecoreApiKey,\r\n      },\r\n      fetcher: dataFetcher,\r\n    };\r\n  }\r\n\r\n  submitEvent() {\r\n    if (!this.event.current) return;\r\n\r\n    trackingApi\r\n      .trackEvent([{ eventId: this.event.current.value }], this.trackingApiOptions)\r\n      .then(() => alert('Page event pushed'))\r\n      .catch((error) => alert(error));\r\n  }\r\n\r\n  submitGoal() {\r\n    if (!this.goal.current) return;\r\n\r\n    trackingApi\r\n      .trackEvent([{ goalId: this.goal.current.value }], this.trackingApiOptions)\r\n      .then(() => alert('Goal pushed'))\r\n      .catch((error) => alert(error));\r\n  }\r\n\r\n  submitOutcome() {\r\n    if (\r\n      !this.pageUrl.current ||\r\n      !this.pageId.current ||\r\n      !this.outcomeName.current ||\r\n      !this.outcomeValue.current\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    trackingApi\r\n      .trackEvent(\r\n        [\r\n          {\r\n            url: this.pageUrl.current.value,\r\n            pageId: this.pageId.current.value,\r\n            outcomeId: this.outcomeName.current.value,\r\n            currencyCode: 'USD',\r\n            monetaryValue: this.outcomeValue.current.value,\r\n          },\r\n        ],\r\n        this.trackingApiOptions\r\n      )\r\n      .then(() => alert('Outcome pushed'))\r\n      .catch((error) => alert(error));\r\n  }\r\n\r\n  triggerCampaign() {\r\n    if (!this.campaign.current) return;\r\n\r\n    trackingApi\r\n      .trackEvent([{ campaignId: this.campaign.current.value }], this.trackingApiOptions)\r\n      .then(() => alert('Campaign set'))\r\n      .catch((error) => alert(error));\r\n  }\r\n\r\n  submitPageView() {\r\n    if (!this.pageId.current || !this.pageUrl.current) return;\r\n\r\n    trackingApi\r\n      .trackEvent(\r\n        [\r\n          {\r\n            pageId: this.pageId.current.value,\r\n            url: this.pageUrl.current.value,\r\n          },\r\n        ],\r\n        this.trackingApiOptions\r\n      )\r\n      .then(() => alert('Page view pushed'))\r\n      .catch((error) => alert(error));\r\n  }\r\n\r\n  abandonSession() {\r\n    const abandonOptions = {\r\n      action: 'flush',\r\n      ...this.trackingApiOptions,\r\n    };\r\n\r\n    trackingApi\r\n      .trackEvent([], abandonOptions)\r\n      .then(() => alert('Interaction has been terminated and its data pushed to xConnect.'))\r\n      .catch((error) => alert(error));\r\n  }\r\n\r\n  submitBatching() {\r\n    trackingApi\r\n      .trackEvent(\r\n        [\r\n          { eventId: 'Download' },\r\n          { goalId: 'Instant Demo' },\r\n          { outcomeId: 'Opportunity' },\r\n          {\r\n            pageId: '{110D559F-DEA5-42EA-9C1C-8A5DF7E70EF9}',\r\n            url: '/arbitrary/url/you/own',\r\n          },\r\n          // this goal will be added to the new page/route ID set above, not the current route\r\n          { goalId: 'Register' },\r\n        ],\r\n        this.trackingApiOptions\r\n      )\r\n      .then(() => alert('Batch of events pushed'))\r\n      .catch((error) => alert(error));\r\n  }\r\n\r\n  render() {\r\n    const disconnectedMode = this.props.sitecoreContext.itemId === 'available-in-connected-mode';\r\n\r\n    return (\r\n      <StyleguideSpecimen {...this.props} e2eId=\"styleguide-tracking\">\r\n        {disconnectedMode && (\r\n          <p>The tracking API is only available in connected, integrated, or headless modes.</p>\r\n        )}\r\n        {!disconnectedMode && (\r\n          <div>\r\n            <p className=\"alert alert-warning\">\r\n              Note: The JSS tracker API is disabled by default. Consult the{' '}\r\n              <a href=\"https://jss.sitecore.com/docs/fundamentals/services/tracking\">\r\n                tracking documentation\r\n              </a>{' '}\r\n              to enable it.\r\n            </p>\r\n            <div className=\"row\">\r\n              <fieldset className=\"form-group col-sm\">\r\n                <legend>Event</legend>\r\n                <p>\r\n                  Events are defined in <code>/sitecore/system/Settings/Analytics/Page Events</code>\r\n                </p>\r\n                <label htmlFor=\"event\">Event GUID or Name</label>\r\n                <input type=\"text\" id=\"event\" className=\"form-control\" ref={this.event} />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary mt-3\"\r\n                  onClick={this.submitEvent.bind(this)}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </fieldset>\r\n\r\n              <fieldset className=\"form-group col-sm\">\r\n                <legend>Goal</legend>\r\n                <p>\r\n                  Goals are defined in <code>/sitecore/system/Marketing Control Panel/Goals</code>\r\n                </p>\r\n                <label htmlFor=\"goal\">Goal GUID or Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"goal\"\r\n                  ref={this.goal}\r\n                  placeholder=\"i.e. Register\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary mt-3\"\r\n                  onClick={this.submitGoal.bind(this)}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </fieldset>\r\n            </div>\r\n            <div className=\"row\">\r\n              <fieldset className=\"form-group col-sm\">\r\n                <legend>Outcome</legend>\r\n                <p>\r\n                  Outcomes are defined in{' '}\r\n                  <code>/sitecore/system/Marketing Control Panel/Outcomes</code>\r\n                </p>\r\n                <label htmlFor=\"outcomeName\">Outcome GUID or Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"outcomeName\"\r\n                  ref={this.outcomeName}\r\n                  placeholder=\"i.e. Marketing Lead\"\r\n                />\r\n                <br />\r\n                <label htmlFor=\"outcomeValue\">Monetary Value (optional)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"outcomeValue\"\r\n                  ref={this.outcomeValue}\r\n                  placeholder=\"i.e. 1337.00\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary mt-3\"\r\n                  onClick={this.submitOutcome.bind(this)}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </fieldset>\r\n\r\n              <fieldset className=\"form-group col-sm\">\r\n                <legend>Campaign</legend>\r\n                <p>\r\n                  Campaigns are defined in{' '}\r\n                  <code>/sitecore/system/Marketing Control Panel/Campaigns</code>\r\n                </p>\r\n                <label htmlFor=\"campaign\">Campaign GUID or Name</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"campaign\" ref={this.campaign} />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary mt-3\"\r\n                  onClick={this.triggerCampaign.bind(this)}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </fieldset>\r\n            </div>\r\n            <div className=\"row\">\r\n              <fieldset className=\"form-group col-sm\">\r\n                <legend>Page View</legend>\r\n                <p>\r\n                  Track arbitrary page views for custom routing or offline use. Note that Layout\r\n                  Service tracks page views by default unless <code>tracking=false</code> is passed\r\n                  in its query string.\r\n                </p>\r\n                <label htmlFor=\"pageId\">Page Item GUID</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"pageId\"\r\n                  ref={this.pageId}\r\n                  placeholder=\"i.e. {11111111-1111-1111-1111-111111111111}\"\r\n                />\r\n                <br />\r\n                <label htmlFor=\"pageUrl\">Page URL</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"pageUrl\"\r\n                  ref={this.pageUrl}\r\n                  placeholder=\"i.e. /foo/bar\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary mt-3\"\r\n                  onClick={this.submitPageView.bind(this)}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </fieldset>\r\n\r\n              <fieldset className=\"form-group col-sm\">\r\n                <legend>Batching</legend>\r\n                <p>\r\n                  The tracking API supports pushing a whole batch of events in a single request.\r\n                  This can be useful for queuing strategies or offline PWA usage.\r\n                </p>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={this.submitBatching.bind(this)}\r\n                >\r\n                  Submit Batch of Events\r\n                </button>\r\n              </fieldset>\r\n            </div>\r\n            <div className=\"row\">\r\n              <fieldset className=\"form-group col-sm\">\r\n                <legend>Interaction Control</legend>\r\n                <p>\r\n                  Tracking data is not pushed into the xConnect service until your session ends on\r\n                  the Sitecore server. Click this button to instantly end your session and flush the\r\n                  data - great for debugging and testing.\r\n                </p>\r\n                <p className=\"alert alert-warning\">\r\n                  Note: By default <em>anonymous</em> contacts will not be shown in Experience\r\n                  Profile. If your interactions are not showing up in Experience Profile, you may\r\n                  need to{' '}\r\n                  <a href=\"https://doc.sitecore.net/developers/xp/xconnect/xconnect-search-indexer/enable-anonymous-contact-indexing.html\">\r\n                    enable anonymous contact indexing.\r\n                  </a>\r\n                </p>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={this.abandonSession.bind(this)}\r\n                >\r\n                  End Interaction\r\n                </button>\r\n              </fieldset>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </StyleguideSpecimen>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSitecoreContext()(StyleguideTracking);\r\n"]},"metadata":{},"sourceType":"module"}