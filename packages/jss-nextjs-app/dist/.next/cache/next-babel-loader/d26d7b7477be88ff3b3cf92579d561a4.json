{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\jss\\\\nextjsonazure\\\\packages\\\\jss-nextjs-app-new\\\\src\\\\components\\\\styleguide\\\\Styleguide-ComponentParams.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport StyleguideSpecimen from './Styleguide-Specimen';\n\nconst StyleguideComponentParams = props => {\n  // props.params (i.e. props.params.cssClass without destructuring) contains the component's params\n  const {\n    cssClass,\n    columns,\n    useCallToAction\n  } = props.params;\n  const columnsArray = columns && [...Array(parseInt(columns))];\n  return /*#__PURE__*/_jsxDEV(StyleguideSpecimen, _objectSpread(_objectSpread({}, props), {}, {\n    e2eId: \"styleguide-componentparams\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: cssClass,\n      children: [\"The CSS class of this paragraph (\", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: cssClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 42\n      }, this), \") is set using a param\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"useCallToAction param: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: useCallToAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), \"param type: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: typeof useCallToAction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), useCallToAction === 'true' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        children: \"the call to action is shown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"columns param: \", columns]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: columnsArray && columnsArray.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm\",\n        children: [\"Column \", index]\n      }, `col-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\nexport default StyleguideComponentParams;","map":{"version":3,"sources":["D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/src/components/styleguide/Styleguide-ComponentParams.tsx"],"names":["StyleguideSpecimen","StyleguideComponentParams","props","cssClass","columns","useCallToAction","params","columnsArray","Array","parseInt","map","_","index"],"mappings":";;;;;;;;;AAAA,OAAOA,kBAAP,MAA+B,uBAA/B;;AAYA,MAAMC,yBAAyB,GAAIC,KAAD,IAAwD;AACxF;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAAyCH,KAAK,CAACI,MAArD;AAEA,QAAMC,YAAY,GAAGH,OAAO,IAAI,CAAC,GAAGI,KAAK,CAACC,QAAQ,CAACL,OAAD,CAAT,CAAT,CAAhC;AAEA,sBACE,QAAC,kBAAD,kCAAwBF,KAAxB;AAA+B,IAAA,KAAK,EAAC,4BAArC;AAAA,4BACE;AAAG,MAAA,SAAS,EAAEC,QAAd;AAAA,mEACmC;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,cADnC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,yDAEyB;AAAA,kBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA,cAFzB,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,+BAIc;AAAA,kBAAO,OAAOA;AAAd;AAAA;AAAA;AAAA;AAAA,cAJd,EAKGA,eAAe,KAAK,MAApB,iBACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAaE;AAAA,oCAAmBD,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGG,YAAY,IACXA,YAAY,CAACG,GAAb,CAAiB,CAACC,CAAD,EAAIC,KAAJ,kBACf;AAA0B,QAAA,SAAS,EAAC,QAApC;AAAA,8BACUA,KADV;AAAA,SAAW,OAAMA,KAAM,EAAvB;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA/BD;;AAiCA,eAAeX,yBAAf","sourcesContent":["import StyleguideSpecimen from './Styleguide-Specimen';\r\nimport { StyleguideComponentProps, StyleguideSpecimenFields } from 'lib/component-props';\r\n\r\ntype StyleguideComponentParamsProps = StyleguideComponentProps &\r\n  StyleguideSpecimenFields & {\r\n    params: {\r\n      cssClass: string;\r\n      columns: string;\r\n      useCallToAction: 'false' | 'true';\r\n    };\r\n  };\r\n\r\nconst StyleguideComponentParams = (props: StyleguideComponentParamsProps): JSX.Element => {\r\n  // props.params (i.e. props.params.cssClass without destructuring) contains the component's params\r\n  const { cssClass, columns, useCallToAction } = props.params;\r\n\r\n  const columnsArray = columns && [...Array(parseInt(columns))];\r\n\r\n  return (\r\n    <StyleguideSpecimen {...props} e2eId=\"styleguide-componentparams\">\r\n      <p className={cssClass}>\r\n        The CSS class of this paragraph (<code>{cssClass}</code>) is set using a param\r\n      </p>\r\n      <div>\r\n        {/* Note that all params come in as string values, like this boolean-like param here: */}\r\n        useCallToAction param: <code>{useCallToAction}</code>\r\n        <br />\r\n        param type: <code>{typeof useCallToAction}</code>\r\n        {useCallToAction === 'true' && (\r\n          <div className=\"alert alert-info\">the call to action is shown</div>\r\n        )}\r\n      </div>\r\n      <p>columns param: {columns}</p>\r\n      <div className=\"row\">\r\n        {columnsArray &&\r\n          columnsArray.map((_, index) => (\r\n            <div key={`col-${index}`} className=\"col-sm\">\r\n              Column {index}\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </StyleguideSpecimen>\r\n  );\r\n};\r\n\r\nexport default StyleguideComponentParams;\r\n"]},"metadata":{},"sourceType":"module"}