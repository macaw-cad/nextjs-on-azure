{"ast":null,"code":"import { EditingDataMiddleware } from '@sitecore-jss/sitecore-jss-nextjs/middleware';\n/**\r\n * This Next.js API route is used to handle Sitecore Experience Editor data storage and retrieval by key\r\n * (between the Sitecore Experience Editor POST and Next.js page render requests) via the `EditingDataService`.\r\n *\r\n * The `EditingDataMiddleware` expects this dynamic route name to be '[key]' by default, but can\r\n * be configured to use something else with the `dynamicRouteKey` option.\r\n */\n// Bump body size limit (1mb by default) for Experience Editor payload\n// See https://nextjs.org/docs/api-routes/api-middlewares#custom-config\n\nexport const config = {\n  api: {\n    bodyParser: {\n      sizeLimit: '2mb'\n    }\n  }\n}; // Wire up the EditingDataMiddleware handler\n\nconst handler = new EditingDataMiddleware().getHandler();\nexport default handler;","map":{"version":3,"sources":["D:/projects/jss/nextjsonazure/packages/jss-nextjs-app/src/pages/api/editing/data/[key].ts"],"names":["EditingDataMiddleware","config","api","bodyParser","sizeLimit","handler","getHandler"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,8CAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAE;AADD;AADT;AADe,CAAf,C,CAQP;;AACA,MAAMC,OAAO,GAAG,IAAIL,qBAAJ,GAA4BM,UAA5B,EAAhB;AAEA,eAAeD,OAAf","sourcesContent":["import { EditingDataMiddleware } from '@sitecore-jss/sitecore-jss-nextjs/middleware';\r\n\r\n/**\r\n * This Next.js API route is used to handle Sitecore Experience Editor data storage and retrieval by key\r\n * (between the Sitecore Experience Editor POST and Next.js page render requests) via the `EditingDataService`.\r\n *\r\n * The `EditingDataMiddleware` expects this dynamic route name to be '[key]' by default, but can\r\n * be configured to use something else with the `dynamicRouteKey` option.\r\n */\r\n\r\n// Bump body size limit (1mb by default) for Experience Editor payload\r\n// See https://nextjs.org/docs/api-routes/api-middlewares#custom-config\r\nexport const config = {\r\n  api: {\r\n    bodyParser: {\r\n      sizeLimit: '2mb',\r\n    },\r\n  },\r\n};\r\n\r\n// Wire up the EditingDataMiddleware handler\r\nconst handler = new EditingDataMiddleware().getHandler();\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}