{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\projects\\\\jss\\\\nextjsonazure\\\\packages\\\\jss-nextjs-app-new\\\\src\\\\Layout.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { useEffect } from 'react';\nimport { useI18n } from 'next-localization';\nimport { getPublicUrl } from 'lib/util';\nimport { Placeholder, VisitorIdentification, useSitecoreContext } from '@sitecore-jss/sitecore-jss-nextjs';\n// Prefix public assets with a public URL to enable compatibility with Sitecore Experience Editor.\n// If you're not supporting the Experience Editor, you can remove this.\nvar publicUrl = getPublicUrl(); // This is boilerplate navigation for sample purposes. Most apps should throw this away and use their own navigation implementation.\n// Most apps may also wish to use GraphQL for their navigation construction; this sample does not simply to support disconnected mode.\n\nvar Navigation = function Navigation() {\n  _s();\n\n  var _useI18n = useI18n(),\n      t = _useI18n.t;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"my-0 mr-md-auto font-weight-normal\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"text-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\".concat(publicUrl, \"/sc_logo.svg\"),\n            alt: \"Sitecore\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"my-2 my-md-0 mr-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"p-2 text-dark\",\n        href: \"https://jss.sitecore.com\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: t('Documentation')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/styleguide\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"p-2 text-dark\",\n          children: t('Styleguide')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/graphql\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"p-2 text-dark\",\n          children: t('GraphQL')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Navigation, \"82N5KF9nLzZ6+2WH7KIjzIXRkLw=\", false, function () {\n  return [useI18n];\n});\n\n_c = Navigation;\n\nvar Layout = function Layout(_ref) {\n  _s2();\n\n  var _route$fields, _route$fields$pageTit;\n\n  var context = _ref.context;\n\n  var _useSitecoreContext = useSitecoreContext({\n    updatable: true\n  }),\n      updateSitecoreContext = _useSitecoreContext.updateSitecoreContext; // Update Sitecore Context if layoutData has changed (i.e. on client-side route change).\n  // Note the context object type here matches the initial value in [[...path]].tsx.\n\n\n  useEffect(function () {\n    updateSitecoreContext && updateSitecoreContext(context);\n  }, [context]);\n  var route = context.route;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: (route === null || route === void 0 ? void 0 : (_route$fields = route.fields) === null || _route$fields === void 0 ? void 0 : (_route$fields$pageTit = _route$fields.pageTitle) === null || _route$fields$pageTit === void 0 ? void 0 : _route$fields$pageTit.value) || 'Page'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"\".concat(publicUrl, \"/favicon.ico\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(VisitorIdentification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Placeholder, {\n        name: \"jss-main\",\n        rendering: route\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s2(Layout, \"KI2AVWTSgRtlqeIjt6WQ0ItRwMY=\", false, function () {\n  return [useSitecoreContext];\n});\n\n_c2 = Layout;\nexport default Layout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Navigation\");\n$RefreshReg$(_c2, \"Layout\");","map":{"version":3,"sources":["D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/src/Layout.tsx"],"names":["Head","Link","useEffect","useI18n","getPublicUrl","Placeholder","VisitorIdentification","useSitecoreContext","publicUrl","Navigation","t","Layout","context","updatable","updateSitecoreContext","route","fields","pageTitle","value"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport { useEffect } from 'react';\r\nimport { useI18n } from 'next-localization';\r\nimport { getPublicUrl } from 'lib/util';\r\nimport {\r\n  Placeholder,\r\n  VisitorIdentification,\r\n  useSitecoreContext,\r\n} from '@sitecore-jss/sitecore-jss-nextjs';\r\nimport { StyleguideSitecoreContextValue } from 'lib/component-props';\r\n\r\n// Prefix public assets with a public URL to enable compatibility with Sitecore Experience Editor.\r\n// If you're not supporting the Experience Editor, you can remove this.\r\nconst publicUrl = getPublicUrl();\r\n\r\n// This is boilerplate navigation for sample purposes. Most apps should throw this away and use their own navigation implementation.\r\n// Most apps may also wish to use GraphQL for their navigation construction; this sample does not simply to support disconnected mode.\r\nconst Navigation = () => {\r\n  const { t } = useI18n();\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom\">\r\n      <h5 className=\"my-0 mr-md-auto font-weight-normal\">\r\n        <Link href=\"/\">\r\n          <a className=\"text-dark\">\r\n            <img src={`${publicUrl}/sc_logo.svg`} alt=\"Sitecore\" />\r\n          </a>\r\n        </Link>\r\n      </h5>\r\n      <nav className=\"my-2 my-md-0 mr-md-3\">\r\n        <a\r\n          className=\"p-2 text-dark\"\r\n          href=\"https://jss.sitecore.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {t('Documentation')}\r\n        </a>\r\n        <Link href=\"/styleguide\">\r\n          <a className=\"p-2 text-dark\">{t('Styleguide')}</a>\r\n        </Link>\r\n        <Link href=\"/graphql\">\r\n          <a className=\"p-2 text-dark\">{t('GraphQL')}</a>\r\n        </Link>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype LayoutProps = {\r\n  context: StyleguideSitecoreContextValue;\r\n};\r\n\r\nconst Layout = ({ context }: LayoutProps): JSX.Element => {\r\n  const { updateSitecoreContext } = useSitecoreContext({ updatable: true });\r\n\r\n  // Update Sitecore Context if layoutData has changed (i.e. on client-side route change).\r\n  // Note the context object type here matches the initial value in [[...path]].tsx.\r\n  useEffect(() => {\r\n    updateSitecoreContext && updateSitecoreContext(context);\r\n  }, [context]);\r\n\r\n  const { route } = context;\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{route?.fields?.pageTitle?.value || 'Page'}</title>\r\n        <link rel=\"icon\" href={`${publicUrl}/favicon.ico`} />\r\n      </Head>\r\n\r\n      {/*\r\n        VisitorIdentification is necessary for Sitecore Analytics to determine if the visitor is a robot.\r\n        If Sitecore XP (with xConnect/xDB) is used, this is required or else analytics will not be collected for the JSS app.\r\n        For XM (CMS-only) apps, this should be removed.\r\n\r\n        VI detection only runs once for a given analytics ID, so this is not a recurring operation once cookies are established.\r\n      */}\r\n      <VisitorIdentification />\r\n\r\n      <Navigation />\r\n\r\n      {/* root placeholder for the app, which we add components to using route data */}\r\n      <div className=\"container\">\r\n        <Placeholder name=\"jss-main\" rendering={route} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}