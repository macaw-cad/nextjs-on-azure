{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Router from 'next/router';\nimport { I18nProvider } from 'next-localization';\nimport NProgress from 'nprogress'; // Using bootstrap and nprogress are completely optional.\n//  bootstrap is used here to provide a clean layout for samples, without needing extra CSS in the sample app\n//  nprogress provides a loading indicator on page/route changes\n// Remove these in package.json as well if removed here.\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'nprogress/nprogress.css';\nimport 'assets/app.css';\nNProgress.configure({\n  showSpinner: false,\n  trickleSpeed: 100\n});\nRouter.events.on('routeChangeStart', () => NProgress.start());\nRouter.events.on('routeChangeComplete', () => NProgress.done());\nRouter.events.on('routeChangeError', () => NProgress.done());\n\nfunction App({\n  Component,\n  pageProps\n}) {\n  const {\n    dictionary\n  } = pageProps,\n        rest = _objectWithoutProperties(pageProps, [\"dictionary\"]);\n\n  return (\n    /*#__PURE__*/\n    // Use the next-localization (w/ rosetta) library to provide our translation dictionary to the app.\n    // Note Next.js does not (currently) provide anything for translation, only i18n routing.\n    // If your app is not multilingual, next-localization and references to it can be removed.\n    _jsx(I18nProvider, {\n      lngDict: dictionary,\n      locale: pageProps.locale,\n      children: /*#__PURE__*/_jsx(Component, _objectSpread({}, rest))\n    })\n  );\n}\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}