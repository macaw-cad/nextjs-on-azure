{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport Head from 'next/head';\n\n/**\r\n * Rendered in case if we have 500 error, used only in Production mode\r\n * @link https://nextjs.org/docs/advanced-features/custom-error-page#customizing-the-error-page\r\n */\nvar ErrorPage = function ErrorPage(_ref) {\n  var statusCode = _ref.statusCode;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Error\"\n      })\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      style: {\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        children: statusCode ? \"An error \".concat(statusCode, \" occurred on server\") : 'An error occurred on client'\n      }), /*#__PURE__*/_jsx(\"a\", {\n        href: \"/\",\n        children: \"Go to the Home page\"\n      })]\n    })]\n  });\n};\n\nErrorPage.getInitialProps = function (_ref2) {\n  var res = _ref2.res,\n      err = _ref2.err;\n  var statusCode = res ? res.statusCode : err ? err.statusCode : 404;\n  return {\n    statusCode: statusCode\n  };\n};\n\nexport default ErrorPage;","map":null,"metadata":{},"sourceType":"module"}