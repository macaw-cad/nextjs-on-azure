{"ast":null,"code":"import _defineProperty from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\jss\\\\nextjsonazure\\\\packages\\\\jss-nextjs-app-new\\\\src\\\\components\\\\styleguide\\\\Styleguide-Layout-Tabs.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { withPlaceholder, withSitecoreContext, Text } from '@sitecore-jss/sitecore-jss-nextjs';\nimport StyleguideSpecimen from './Styleguide-Specimen';\n\n/**\r\n * Demonstrates advanced component techniques in JSS.\r\n * This example implements a simple-looking tabs component.\r\n * Each tab is itself a child component added to a placeholder defined on the tabs component.\r\n * The tab component introspects its child components to render the tab headings (i.e. the tab children render partial content in two places).\r\n * When this component is edited in Sitecore Experience Editor, the tabbing behavior is turned off and each tab stacks on top of each other\r\n * for easy inline editing.\r\n */\nvar StyleguideLayoutTabs = /*#__PURE__*/function (_React$Component) {\n  _inherits(StyleguideLayoutTabs, _React$Component);\n\n  var _super = _createSuper(StyleguideLayoutTabs);\n\n  function StyleguideLayoutTabs(props) {\n    var _this;\n\n    _classCallCheck(this, StyleguideLayoutTabs);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      activeTabIndex: 0\n    };\n    _this.setActiveTab = _this.setActiveTab.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(StyleguideLayoutTabs, [{\n    key: \"setActiveTab\",\n    value: function setActiveTab(index) {\n      this.setState({\n        activeTabIndex: index\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          tabsPlaceholder = _this$props.tabsPlaceholder,\n          sitecoreContext = _this$props.sitecoreContext;\n      var validTabIndex = 0;\n      var isEditing = sitecoreContext && sitecoreContext.pageEditing;\n      return /*#__PURE__*/_jsxDEV(StyleguideSpecimen, _objectSpread(_objectSpread({}, this.props), {}, {\n        e2eId: \"styleguide-layout-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"nav nav-tabs\",\n          children: !isEditing && (tabsPlaceholder || []).filter(function (tab) {\n            return tab.props && tab.props.fields;\n          }).map(function (tab, index) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"nav-link \".concat(index === _this2.state.activeTabIndex ? 'active' : null),\n                onClick: function onClick() {\n                  return _this2.setActiveTab(index);\n                },\n                href: \"#t\",\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  field: tab.props.fields.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, _this2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, _this2)\n            }, \"tab\".concat(index), false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, _this2);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 border-left border-right border-bottom\",\n          children: (tabsPlaceholder || []).map(function (tab) {\n            var isValid = tab.props && tab.props.fields; // allow experience editor markup components to render\n\n            if (!isValid && isEditing) return tab;\n            validTabIndex += 1; // we render the tab either if it's active - or we're editing,\n            // in which case we stack all tabs for visual editing\n\n            if (_this2.state.activeTabIndex === validTabIndex - 1 || isEditing) {\n              return tab;\n            }\n\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return StyleguideLayoutTabs;\n}(React.Component); // This is a _higher order component_ that will wrap our component and inject placeholder\n// data into it as a prop (in this case, props.tabsPlaceholder).\n// this another option compared to using the <Placeholder> component;\n// in this case, chosen because we primarily need access to the _data_\n// of the placeholder.\n\n\nvar tabsComponentWithPlaceholderInjected = withPlaceholder({\n  placeholder: 'jss-tabs',\n  prop: 'tabsPlaceholder'\n})(StyleguideLayoutTabs); // We need to know if experience editor is active, to disable the dynamic tab behavior for editing.\n// Using the same technique as injecting the placeholder, we wrap the component again to inject the\n// `sitecoreContext` prop.\n\nvar tabsWithPlaceholderAndSitecoreContext = withSitecoreContext()(tabsComponentWithPlaceholderInjected);\nexport default tabsWithPlaceholderAndSitecoreContext;","map":{"version":3,"sources":["D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/src/components/styleguide/Styleguide-Layout-Tabs.tsx"],"names":["React","withPlaceholder","withSitecoreContext","Text","StyleguideSpecimen","StyleguideLayoutTabs","props","state","activeTabIndex","setActiveTab","bind","index","setState","tabsPlaceholder","sitecoreContext","validTabIndex","isEditing","pageEditing","filter","tab","fields","map","title","isValid","Component","tabsComponentWithPlaceholderInjected","placeholder","prop","tabsWithPlaceholderAndSitecoreContext"],"mappings":"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","sourcesContent":["import React, { ReactElement } from 'react';\r\nimport { withPlaceholder, withSitecoreContext, Text } from '@sitecore-jss/sitecore-jss-nextjs';\r\nimport StyleguideSpecimen from './Styleguide-Specimen';\r\nimport { StyleguideComponentWithContextProps, StyleguideSpecimenFields } from 'lib/component-props';\r\n\r\ninterface StyleguideLayoutTabsState {\r\n  activeTabIndex: number;\r\n}\r\n\r\ntype StyleguideLayoutTabsProps = StyleguideComponentWithContextProps &\r\n  StyleguideSpecimenFields & {\r\n    name: string;\r\n    tabsPlaceholder: ReactElement[];\r\n  };\r\n\r\n/**\r\n * Demonstrates advanced component techniques in JSS.\r\n * This example implements a simple-looking tabs component.\r\n * Each tab is itself a child component added to a placeholder defined on the tabs component.\r\n * The tab component introspects its child components to render the tab headings (i.e. the tab children render partial content in two places).\r\n * When this component is edited in Sitecore Experience Editor, the tabbing behavior is turned off and each tab stacks on top of each other\r\n * for easy inline editing.\r\n */\r\nclass StyleguideLayoutTabs extends React.Component<\r\n  StyleguideLayoutTabsProps,\r\n  StyleguideLayoutTabsState\r\n> {\r\n  constructor(props: StyleguideLayoutTabsProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeTabIndex: 0,\r\n    };\r\n\r\n    this.setActiveTab = this.setActiveTab.bind(this);\r\n  }\r\n\r\n  setActiveTab(index: number) {\r\n    this.setState({ activeTabIndex: index });\r\n  }\r\n\r\n  render() {\r\n    const { tabsPlaceholder, sitecoreContext } = this.props;\r\n\r\n    let validTabIndex = 0;\r\n    const isEditing = sitecoreContext && sitecoreContext.pageEditing;\r\n\r\n    return (\r\n      <StyleguideSpecimen {...this.props} e2eId=\"styleguide-layout-tabs\">\r\n        <ul className=\"nav nav-tabs\">\r\n          {/*\r\n            When the page is editing, we hide the tab headings, because they are not updated when xEditor adds or removes a tab rendering.\r\n            Instead, we show the tab header inline with the tab contents (see Styleguide-Layout-Tabs-Tab).\r\n          */}\r\n          {!isEditing &&\r\n            (tabsPlaceholder || [])\r\n              .filter((tab: ReactElement) => tab.props && tab.props.fields)\r\n              .map((tab: ReactElement, index: number) => (\r\n                <li className=\"nav-item\" key={`tab${index}`}>\r\n                  <a\r\n                    className={`nav-link ${index === this.state.activeTabIndex ? 'active' : null}`}\r\n                    onClick={() => this.setActiveTab(index)}\r\n                    href=\"#t\"\r\n                  >\r\n                    <Text field={tab.props.fields.title} />\r\n                  </a>\r\n                </li>\r\n              ))}\r\n        </ul>\r\n        <div className=\"p-3 border-left border-right border-bottom\">\r\n          {(tabsPlaceholder || []).map((tab: ReactElement) => {\r\n            const isValid = tab.props && tab.props.fields;\r\n\r\n            // allow experience editor markup components to render\r\n            if (!isValid && isEditing) return tab;\r\n\r\n            validTabIndex += 1;\r\n\r\n            // we render the tab either if it's active - or we're editing,\r\n            // in which case we stack all tabs for visual editing\r\n            if (this.state.activeTabIndex === validTabIndex - 1 || isEditing) {\r\n              return tab;\r\n            }\r\n\r\n            return null;\r\n          })}\r\n        </div>\r\n      </StyleguideSpecimen>\r\n    );\r\n  }\r\n}\r\n\r\n// This is a _higher order component_ that will wrap our component and inject placeholder\r\n// data into it as a prop (in this case, props.tabsPlaceholder).\r\n// this another option compared to using the <Placeholder> component;\r\n// in this case, chosen because we primarily need access to the _data_\r\n// of the placeholder.\r\nconst tabsComponentWithPlaceholderInjected = withPlaceholder({\r\n  placeholder: 'jss-tabs',\r\n  prop: 'tabsPlaceholder',\r\n})(StyleguideLayoutTabs);\r\n\r\n// We need to know if experience editor is active, to disable the dynamic tab behavior for editing.\r\n// Using the same technique as injecting the placeholder, we wrap the component again to inject the\r\n// `sitecoreContext` prop.\r\nconst tabsWithPlaceholderAndSitecoreContext = withSitecoreContext()<StyleguideLayoutTabsProps>(\r\n  tabsComponentWithPlaceholderInjected\r\n);\r\n\r\nexport default tabsWithPlaceholderAndSitecoreContext;\r\n"]},"metadata":{},"sourceType":"module"}