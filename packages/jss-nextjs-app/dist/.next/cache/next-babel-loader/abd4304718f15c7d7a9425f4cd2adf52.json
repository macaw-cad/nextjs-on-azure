{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\projects\\\\jss\\\\nextjsonazure\\\\packages\\\\jss-nextjs-app-new\\\\src\\\\components\\\\styleguide\\\\Styleguide-Multilingual.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Text } from '@sitecore-jss/sitecore-jss-nextjs';\nimport Link from 'next/link';\nimport { useI18n } from 'next-localization';\nimport StyleguideSpecimen from './Styleguide-Specimen';\n\n/**\r\n * Demonstrates using the dictionary functionality and defining route data in\r\n * multiple languages.\r\n */\nconst StyleguideMultilingual = props => {\n  const {\n    t,\n    locale\n  } = useI18n();\n  return /*#__PURE__*/_jsxDEV(StyleguideSpecimen, _objectSpread(_objectSpread({}, props), {}, {\n    e2eId: \"styleguide-multilingual\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      field: props.fields.sample,\n      encode: false,\n      tag: \"p\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This is a static dictionary entry from \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"/data/dictionary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 48\n      }, this), \":\\xA0\", t('styleguide-sample')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/en/styleguide\",\n        locale: false,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Show in English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/styleguide\",\n        locale: \"da-DK\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Show in Danish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"The current language is: \", locale()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nexport default StyleguideMultilingual;","map":{"version":3,"sources":["D:/projects/jss/nextjsonazure/packages/jss-nextjs-app-new/src/components/styleguide/Styleguide-Multilingual.tsx"],"names":["Text","Link","useI18n","StyleguideSpecimen","StyleguideMultilingual","props","t","locale","fields","sample"],"mappings":";;;;;;;;;AAAA,SAASA,IAAT,QAA4B,mCAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;;AAUA;AACA;AACA;AACA;AACA,MAAMC,sBAAsB,GAAIC,KAAD,IAAqD;AAClF,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAgBL,OAAO,EAA7B;AAEA,sBACE,QAAC,kBAAD,kCAAwBG,KAAxB;AAA+B,IAAA,KAAK,EAAC,yBAArC;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEA,KAAK,CAACG,MAAN,CAAaC,MAA1B;AAAkC,MAAA,MAAM,EAAE,KAA1C;AAAiD,MAAA,GAAG,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,yEACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADzC,WAGGH,CAAC,CAAC,mBAAD,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eASE;AAAA,8BAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,gBAAX;AAA4B,QAAA,MAAM,EAAE,KAApC;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,MAAM,EAAC,OAAhC;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAoBE;AAAA,8CAA6BC,MAAM,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA3BD;;AA6BA,eAAeH,sBAAf","sourcesContent":["import { Text, Field } from '@sitecore-jss/sitecore-jss-nextjs';\r\nimport Link from 'next/link';\r\nimport { useI18n } from 'next-localization';\r\nimport StyleguideSpecimen from './Styleguide-Specimen';\r\nimport { StyleguideComponentWithContextProps, StyleguideSpecimenFields } from 'lib/component-props';\r\n\r\ntype StyleguideMultilingualProps = StyleguideComponentWithContextProps &\r\n  StyleguideSpecimenFields & {\r\n    fields: {\r\n      sample: Field<string>;\r\n    };\r\n  };\r\n\r\n/**\r\n * Demonstrates using the dictionary functionality and defining route data in\r\n * multiple languages.\r\n */\r\nconst StyleguideMultilingual = (props: StyleguideMultilingualProps): JSX.Element => {\r\n  const { t, locale } = useI18n();\r\n\r\n  return (\r\n    <StyleguideSpecimen {...props} e2eId=\"styleguide-multilingual\">\r\n      <Text field={props.fields.sample} encode={false} tag=\"p\" />\r\n\r\n      <p>\r\n        This is a static dictionary entry from <code>/data/dictionary</code>\r\n        :&nbsp;\r\n        {t('styleguide-sample')}\r\n      </p>\r\n\r\n      <p>\r\n        {/* In case if href already includes locale: https://nextjs.org/docs/advanced-features/i18n-routing#transition-between-locales */}\r\n        <Link href=\"/en/styleguide\" locale={false}>\r\n          <a>Show in English</a>\r\n        </Link>\r\n        <br />\r\n        <Link href=\"/styleguide\" locale=\"da-DK\">\r\n          <a>Show in Danish</a>\r\n        </Link>\r\n      </p>\r\n\r\n      <p>The current language is: {locale()}</p>\r\n    </StyleguideSpecimen>\r\n  );\r\n};\r\n\r\nexport default StyleguideMultilingual;\r\n"]},"metadata":{},"sourceType":"module"}